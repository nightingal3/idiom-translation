<HTML><HEAD><META NAME="ROBOTS" CONTENT="NOINDEX, NOFOLLOW">
<script type="text/javascript">
<!--

IE = (navigator.appName == "Microsoft Internet Explorer")

function lookup(e) {
  if(IE){
    range = document.selection.createRange()
    str = range.text
  }else{
    str = document.getSelection()
  }
  code = str.charCodeAt(0)
  if(code >= 0 && code <= 127){
    str = str.replace(/^[^a-zA-Z0-9]+/,"")
    str = str.replace(/[^a-zA-Z0-9]+$/,"")
    if(str != ""){
      win = open("http://dictionary.goo.ne.jp/search.php?MT="+escape(str)+"&kind=&mode=0", "Goo", "width=600,height=400,scrollbars=yes")
      win.focus()
    }
  } 
}
function showLayer(id){ 
    if(document.getElementById){
        document.getElementById(id).style.visibility = 'visible'
    }else if(document.all){
        document.all(id).style.visibility = 'visible'
    }else if(document.layers){
        document.layers[id].visibility = 'show'
    }
}

reJ = new RegExp('J');
reE = new RegExp('E');
function hideLayer(id){
    if(id.match(reJ) && !document.F.CJ.checked) return
    if(id.match(reE) && !document.F.CE.checked) return
    if(document.getElementById){
        document.getElementById(id).style.visibility = 'hidden'
    }else if(document.all){
        document.all(id).style.visibility = 'hidden'
    }else if(document.layers){
        document.layers[id].visibility = 'hidden'
    }
}
function layerIsVisible(id){
    if(document.getElementById){
        return (document.getElementById(id).style.visibility == 'visible')
    }else if(document.all){
        return (document.all(id).style.visibility == 'visible')
    }else if(document.layers){
        return (document.layers[id].visibility == 'show')
    }
}
function toggleLayer(id){
    if(layerIsVisible(id)){
        hideLayer(id)
    }else{
        showLayer(id)
    }
}

function showOrHideE(eng, jp){
    if(document.F.CE.checked){
        hideLayer(eng)
    }else{
        showLayer(jp)
    }
}

function showOrHideJ(jp, eng){
    if(document.F.CJ.checked){
        hideLayer(jp)
    }else{
        showLayer(eng)
    }
}
				

function hasAttribute2(obj, attr){
    if(IE){
        return true
    }else if(document.getElementById){
        return obj.hasAttribute(attr)
    }else{
        return true
    }
}

reTAB = new RegExp("TAB")
function hideJE(str) {
    re = new RegExp(str);
    spans = document.getElementsByTagName("TD")
    for(i=0; i<spans.length; i++){
        if(hasAttribute2(spans[i], "id")){
            id = spans[i].getAttribute("id")
            if(id.match(re)){
	        hideLayer(id)
            }else if(id.match(reTAB) &&
            (document.F.CJ.checked || document.F.CE.checked)){
                spans[i].setAttribute('BGCOLOR', "#FFFFFF")
            }
	}
    }
}
function showJE(str) {
    re = new RegExp(str);
    spans = document.getElementsByTagName("TD")
    for(i=0; i<spans.length; i++){
        if(hasAttribute2(spans[i], "id")){
            id = spans[i].getAttribute("id")
            if(id.match(re)){
	        showLayer(id)
            }else if(id.match(reTAB) &&
            (!document.F.CJ.checked && !document.F.CE.checked)){
                spans[i].setAttribute('BGCOLOR', "#F0F0F0")
	    }
	}
    }
}
function addRules (){
    obj = document.getElementById('TRANSPAIR');
    obj.rules = 'ALL'
    obj.frame = 'BORDER'
}

function removeRules (){
    obj = document.getElementById('TRANSPAIR');
    obj.rules = 'NONE'
    obj.frame = 'VOID'
}

function onoffJ(){
    if (document.F.CJ.checked) {
        hideJE('J');
        addRules();
    }else{
        showJE('J');
        if(!document.F.CE.checked){
            removeRules();
        }
    }
}
function onoffE(){
    if (document.F.CE.checked) {
        hideJE('E');
        addRules();
    }else{
        showJE('E');
        if(!document.F.CJ.checked){
            removeRules();
        }
    }
}
				
// -->
</script>
</HEAD><BODY BGCOLOR=#FFFFFF><div align=right><a href="../data/titles-ja-pages.htm">タイトル順</a>/<a href="../data/authors-pages.htm">著者順</a>/<a href="../data/translators-pages.htm">訳者順</a>/<a href="../index.html">ホーム</a></div><h2>Cracking DES: Secrets of Encryption Research, Wiretap Politics, and Chip Design / Electronic Frontier Foundation 著</h2><h2>DESのクラック：暗号研究と盗聴政策、チップ設計の秘密  / ELECTRONIC FRONTIER FOUNDATION 著 / 山形浩生 訳</h2><p>Annotator: 高橋真弓</p><div align=right><form name="F"><input type="checkbox" name="CE" onclick="onoffE()">英語文を消す <input type="checkbox" name="CJ" onclick="onoffJ()">日本語文を消す <br>(反対側の文を押すと消えた文が出る)</form></div>オリジナル:<a href="../org/dese.txt">英語文</a>&<a href="../org/desj.txt">日本語文</a> / <a href="../manual-alignment/des.alm">対訳データ</a> / <a href="#preamble">このページにある対訳文について</a>
<TITLE>11 of Cracking DES: Secrets of Encryption Research, Wiretap Politics, and Chip Design</TITLE>
<hr>
<a href="des-10.htm">prev</a>
<a href="des-0.htm">0</a>
<a href="des-1.htm">1</a>
<a href="des-2.htm">2</a>
<a href="des-3.htm">3</a>
<a href="des-4.htm">4</a>
<a href="des-5.htm">5</a>
<a href="des-6.htm">6</a>
<a href="des-7.htm">7</a>
<a href="des-8.htm">8</a>
<a href="des-9.htm">9</a>
<a href="des-10.htm">10</a>
<11>
<a href="des-12.htm">12</a>
<a href="des-13.htm">13</a>
<a href="des-14.htm">14</a>
<a href="des-15.htm">15</a>
<a href="des-16.htm">16</a>
<a href="des-17.htm">17</a>
<a href="des-18.htm">18</a>
<a href="des-19.htm">19</a>
<a href="des-20.htm">20</a>
<a href="des-12.htm">next</a>
<a name="tableBegin"></a><HR><span><TABLE BGCOLOR=#F0F0F0 ID=TRANSPAIR FRAME=VOID RULES=NONE BORDERCOLOR=#000000>
<!-- TRANS_PAIR BEGIN --><TR id="1101"><a name="1101"><TD id="E1101" onclick="javascript:toggleLayer('J1101')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A DES mode
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1101" onclick="javascript:toggleLayer('E1101')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> DESモードの一つ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1102"><a name="1102"><TD id="E1102" onclick="javascript:toggleLayer('J1102')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> in which the first plaintext block is XORed with an initialization vector (IV) prior to encryption, and each subsequent plaintext is XOR with the previous ciphertext. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1102" onclick="javascript:toggleLayer('E1102')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 最初の平文ブロックが、初期化ベクトル（IV）とXORされ、その後の平文ブロックは、その前の暗号文とXORされる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1103"><a name="1103"><TD id="E1103" onclick="javascript:toggleLayer('J1103')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> ChipID 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1103" onclick="javascript:toggleLayer('E1103')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チップID 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1104"><a name="1104"><TD id="E1104" onclick="javascript:toggleLayer('J1104')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A value used by the host computer to specify which chip on a board is being addressed.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1104" onclick="javascript:toggleLayer('E1104')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストコンピュータが、基板上のどのチップをアクセスするか指定するときに使う値。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1105"><a name="1105"><TD id="E1105" onclick="javascript:toggleLayer('J1105')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Ciphertext 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1105" onclick="javascript:toggleLayer('E1105')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 暗号文 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1106"><a name="1106"><TD id="E1106" onclick="javascript:toggleLayer('J1106')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Encrypted data. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1106" onclick="javascript:toggleLayer('E1106')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 暗号化されたデータ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1107"><a name="1107"><TD id="E1107" onclick="javascript:toggleLayer('J1107')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Ciphertext0 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1107" onclick="javascript:toggleLayer('E1107')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Ciphertext0 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1108"><a name="1108"><TD id="E1108" onclick="javascript:toggleLayer('J1108')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The first of the two ciphertexts to be attacked. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1108" onclick="javascript:toggleLayer('E1108')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 攻撃する暗号文のうち最初のもの。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1109"><a name="1109"><TD id="E1109" onclick="javascript:toggleLayer('J1109')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Ciphertext1 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1109" onclick="javascript:toggleLayer('E1109')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Ciphertext1 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1110"><a name="1110"><TD id="E1110" onclick="javascript:toggleLayer('J1110')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The second of the two ciphertexts to be attacked. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1110" onclick="javascript:toggleLayer('E1110')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 攻撃する暗号文のうち2番目のもの。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1111"><a name="1111"><TD id="E1111" onclick="javascript:toggleLayer('J1111')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> _________________ 
Pre-ANSI C can be supported if required.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1111" onclick="javascript:toggleLayer('E1111')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 必要なら、ANSI C 以前のものもサポート可能。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1112"><a name="1112"><TD id="E1112" onclick="javascript:toggleLayer('J1112')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Any GUI code will probably be written in C++ . 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1112" onclick="javascript:toggleLayer('E1112')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> GUIコードはおそらくすべてC++で書かれるはず。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1113"><a name="1113"><TD ID="TAB1113" onclick="javascript:toggleLayer('J1113')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1113" onclick="javascript:toggleLayer('E1113')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1114"><a name="1114"><TD id="E1114" onclick="javascript:toggleLayer('J1114')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 2-11 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1114" onclick="javascript:toggleLayer('E1114')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 2-11 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1115"><a name="1115"><TD id="E1115" onclick="javascript:toggleLayer('J1115')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> CiphertextSelector 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1115" onclick="javascript:toggleLayer('E1115')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> CiphertextSelector 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1116"><a name="1116"><TD id="E1116" onclick="javascript:toggleLayer('J1116')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A register used to select the current ciphertext being attacked.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1116" onclick="javascript:toggleLayer('E1116')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 現在攻撃されている暗号文を選ぶためのレジスタ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1117"><a name="1117"><TD id="E1117" onclick="javascript:toggleLayer('J1117')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The selector is needed because a single DES engine needs to be able to test two ciphertexts to determine whether both are acceptable matches before deciding that a key is good match. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1117" onclick="javascript:toggleLayer('E1117')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各DESエンジンは、あるキーが見込みありそうだと判断するときに、暗号文を2つテストして両方とも見込みある結果が出ていることを確認するので、このセレクタが必要になる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1118"><a name="1118"><TD id="E1118" onclick="javascript:toggleLayer('J1118')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> DES 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1118" onclick="javascript:toggleLayer('E1118')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> DES 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1119"><a name="1119"><TD id="E1119" onclick="javascript:toggleLayer('J1119')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The Data Encryption Standard. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1119" onclick="javascript:toggleLayer('E1119')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> データ暗号化規格（The Data Encryption Standard） 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1120"><a name="1120"><TD id="E1120" onclick="javascript:toggleLayer('J1120')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> ExtraXOR 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1120" onclick="javascript:toggleLayer('E1120')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ExtraXOR 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1121"><a name="1121"><TD id="E1121" onclick="javascript:toggleLayer('J1121')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A register to make the search units perform an extra operation which XORs the right and left halves of the result together.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1121" onclick="javascript:toggleLayer('E1121')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 復号結果の右半分と左半分をXORをする追加操作を探索ユニットにさせるためのレジスタ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1122"><a name="1122"><TD id="E1122" onclick="javascript:toggleLayer('J1122')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> This is used to add support for Matt Blaze's DES challenge. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1122" onclick="javascript:toggleLayer('E1122')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Matt BlazeのDES問題の解決をサポートできるように追加された。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1123"><a name="1123"><TD id="E1123" onclick="javascript:toggleLayer('J1123')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Host computer 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1123" onclick="javascript:toggleLayer('E1123')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストコンピュータ 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1124"><a name="1124"><TD id="E1124" onclick="javascript:toggleLayer('J1124')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The computer that controls the DES search array. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1124" onclick="javascript:toggleLayer('E1124')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> DES探索アレイをコントロールするコンピュータ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1125"><a name="1125"><TD id="E1125" onclick="javascript:toggleLayer('J1125')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> KeyCounter 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1125" onclick="javascript:toggleLayer('E1125')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> キーカウンタ 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1126"><a name="1126"><TD id="E1126" onclick="javascript:toggleLayer('J1126')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Each search unit has a KeyCounter register which contains the current key being searched.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1126" onclick="javascript:toggleLayer('E1126')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各探索ユニットにはキーカウンタ・レジスタがあって、現在チェック中の鍵がおさめられている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1127"><a name="1127"><TD id="E1127" onclick="javascript:toggleLayer('J1127')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> These registers are each 7 bytes long, to hold a 56-bit key. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1127" onclick="javascript:toggleLayer('E1127')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このレジスタはそれぞれ7バイトあり、56ビットの鍵がおさまるようになっている。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1128"><a name="1128"><TD id="E1128" onclick="javascript:toggleLayer('J1128')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Plaintext 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1128" onclick="javascript:toggleLayer('E1128')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 平文（Plaintext） 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1129"><a name="1129"><TD id="E1129" onclick="javascript:toggleLayer('J1129')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Unencrypted data corresponding to a ciphertext. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1129" onclick="javascript:toggleLayer('E1129')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 暗号文に対応した、暗号化されていないデータ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1130"><a name="1130"><TD id="E1130" onclick="javascript:toggleLayer('J1130')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> PlaintextByteMask 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1130" onclick="javascript:toggleLayer('E1130')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> PlaintextByteMask 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1131"><a name="1131"><TD id="E1131" onclick="javascript:toggleLayer('J1131')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> An 8-bit register used to mask off plaintext bytes.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1131" onclick="javascript:toggleLayer('E1131')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 8ビットのレジスタで、平文のバイトにマスクをかけるために使う。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1132"><a name="1132"><TD id="E1132" onclick="javascript:toggleLayer('J1132')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> This is used to mask off bytes in the plaintext whose values aren't known or are too variable to list in the PlaintextVector. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1132" onclick="javascript:toggleLayer('E1132')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 平文で、値のわかっていないバイトをマスクしておいたり、わかってはいてもPlaintextVectorに記述できるほど明確ではない場合に使う。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1133"><a name="1133"><TD id="E1133" onclick="javascript:toggleLayer('J1133')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> PlaintextVector 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1133" onclick="javascript:toggleLayer('E1133')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> PlaintextVector 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1134"><a name="1134"><TD id="E1134" onclick="javascript:toggleLayer('J1134')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A 256-bit register used to specify which byte values can be present in valid plaintexts.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1134" onclick="javascript:toggleLayer('E1134')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 256-bit のレジスタで、見込みある平文でどのバイト値があり得るかを指定するためのもの。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1135"><a name="1135"><TD id="E1135" onclick="javascript:toggleLayer('J1135')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> It is the host computer's responsibility to ensure that only a reasonable number of bits are set in the PlaintextVector;
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1135" onclick="javascript:toggleLayer('E1135')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストコンピュータは、PlaintextVectorのまともな数のビットがセットされているのを自分で確認する必要がある。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1136"><a name="1136"><TD id="E1136" onclick="javascript:toggleLayer('J1136')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> setting too many will cause the DES search units to halt too frequently. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1136" onclick="javascript:toggleLayer('E1136')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> セットされているビットが多すぎれば、DESの探索が止まる回数が多くなりすぎる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1137"><a name="1137"><TD id="E1137" onclick="javascript:toggleLayer('J1137')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> PlaintextXorMask 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1137" onclick="javascript:toggleLayer('E1137')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> PlaintextXorMask 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1138"><a name="1138"><TD id="E1138" onclick="javascript:toggleLayer('J1138')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A 64-bit register XORed onto the value derived by decrypting ciphertext 0. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1138" onclick="javascript:toggleLayer('E1138')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Ciphertext0 を復号した結果にXORされる64-bit レジスタ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1139"><a name="1139"><TD id="E1139" onclick="javascript:toggleLayer('J1139')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Normally this mask is either zero or set to the CBC mode initialization vector (IV). 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1139" onclick="javascript:toggleLayer('E1139')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ふつうは、このマスクは0ｓｗ、CBCモードのときには初期化ベクトル（IV）にセットされる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1140"><a name="1140"><TD id="E1140" onclick="javascript:toggleLayer('J1140')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> SearchActive 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1140" onclick="javascript:toggleLayer('E1140')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> SearchActive 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1141"><a name="1141"><TD id="E1141" onclick="javascript:toggleLayer('J1141')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A bit for each search unit which indicates whether it is currently searching, or whether it has stopped at a candidate key.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1141" onclick="javascript:toggleLayer('E1141')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各探索ユニット上のビットで、現在探索を行っているか、それとも候補鍵を見つけて止まっているかを示す。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1142"><a name="1142"><TD id="E1142" onclick="javascript:toggleLayer('J1142')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Stopped search units can be restarted by loading a key which does not halt and resetting this bit. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1142" onclick="javascript:toggleLayer('E1142')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 止まった探索ユニットを再開するには、止まらない鍵をロードして、このビットをリセットする。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1143"><a name="1143"><TD id="E1143" onclick="javascript:toggleLayer('J1143')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> SearchInfo 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1143" onclick="javascript:toggleLayer('E1143')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> SearchInfo 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1144"><a name="1144"><TD id="E1144" onclick="javascript:toggleLayer('J1144')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A register containing miscellaneous information about how DES results should be post-processed
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1144" onclick="javascript:toggleLayer('E1144')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> DESの結果をどのように事後処理するかについて、各種の情報を入れておくレジスタ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1145"><a name="1145"><TD id="E1145" onclick="javascript:toggleLayer('J1145')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> and also indicating whether any search units on the chip or on the board have halted.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1145" onclick="javascript:toggleLayer('E1145')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> さらに、チップ上または基板上の探索ユニットがどれか止まったかどうかも示す。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1146"><a name="1146"><TD ID="TAB1146" onclick="javascript:toggleLayer('J1146')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1146" onclick="javascript:toggleLayer('E1146')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1147"><a name="1147"><TD id="E1147" onclick="javascript:toggleLayer('J1147')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 2-12 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1147" onclick="javascript:toggleLayer('E1147')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 2-12 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1148"><a name="1148"><TD id="E1148" onclick="javascript:toggleLayer('J1148')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> UseCBC 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1148" onclick="javascript:toggleLayer('E1148')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> UseCBC 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1149"><a name="1149"><TD id="E1149" onclick="javascript:toggleLayer('J1149')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A bit in SearchInfo which directs the search engine to do CBC-mode post-processing after decryption
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1149" onclick="javascript:toggleLayer('E1149')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> SearchInfo の中のビットで、探索エンジンが復号後にCBCモードの事後処理を行うように指示する
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1150"><a name="1150"><TD id="E1150" onclick="javascript:toggleLayer('J1150')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> (e.g., XOR the decryption of ciphertext1 with ciphertext0 to produce plaintext1). 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1150" onclick="javascript:toggleLayer('E1150')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> （つまりciphertext1の復号結果をciphertext0とXORしてplaintext1をつくるようにする）。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1151"><a name="1151"><TD ID="TAB1151" onclick="javascript:toggleLayer('J1151')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1151" onclick="javascript:toggleLayer('E1151')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1152"><a name="1152"><TD id="E1152" onclick="javascript:toggleLayer('J1152')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 3 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1152" onclick="javascript:toggleLayer('E1152')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 3 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1153"><a name="1153"><TD id="E1153" onclick="javascript:toggleLayer('J1153')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Design for DES Key Search Array Chip-Level Specification 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1153" onclick="javascript:toggleLayer('E1153')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> DES 鍵探索アレイの設計：チップレベルの仕様 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1154"><a name="1154"><TD id="E1154" onclick="javascript:toggleLayer('J1154')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> In this chapter: 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1154" onclick="javascript:toggleLayer('E1154')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 本章の内容: 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1155"><a name="1155"><TD id="E1155" onclick="javascript:toggleLayer('J1155')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> ASIC Description 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1155" onclick="javascript:toggleLayer('E1155')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ASICの説明 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1156"><a name="1156"><TD id="E1156" onclick="javascript:toggleLayer('J1156')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Board description 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1156" onclick="javascript:toggleLayer('E1156')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板の説明 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1157"><a name="1157"><TD id="E1157" onclick="javascript:toggleLayer('J1157')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Read and Write Timing 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1157" onclick="javascript:toggleLayer('E1157')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> リード／ライトのタイミング 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1158"><a name="1158"><TD id="E1158" onclick="javascript:toggleLayer('J1158')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Addressing Registers 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1158" onclick="javascript:toggleLayer('E1158')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> アドレス指定用レジスタ 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1159"><a name="1159"><TD id="E1159" onclick="javascript:toggleLayer('J1159')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> All-active Signal 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1159" onclick="javascript:toggleLayer('E1159')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> All-active 信号 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1160"><a name="1160"><TD id="E1160" onclick="javascript:toggleLayer('J1160')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> ASIC Register Allocation 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1160" onclick="javascript:toggleLayer('E1160')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ASIC レジスタのわりあて 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1161"><a name="1161"><TD id="E1161" onclick="javascript:toggleLayer('J1161')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Advanced Wireless Technologies, Inc. and Cryptography Research 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1161" onclick="javascript:toggleLayer('E1161')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Advanced Wireless Technologies, Inc. and Cryptography Research
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1162"><a name="1162"><TD ID="TAB1162" onclick="javascript:toggleLayer('J1162')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1162" onclick="javascript:toggleLayer('E1162')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1163"><a name="1163"><TD id="E1163" onclick="javascript:toggleLayer('J1163')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> ASIC Description 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1163" onclick="javascript:toggleLayer('E1163')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ASIC の説明 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1164"><a name="1164"><TD id="E1164" onclick="javascript:toggleLayer('J1164')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Select1 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1164" onclick="javascript:toggleLayer('E1164')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Select1 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1165"><a name="1165"><TD id="E1165" onclick="javascript:toggleLayer('J1165')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Selects Cipher text 1 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1165" onclick="javascript:toggleLayer('E1165')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Cipher text 1 を選ぶ 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1166"><a name="1166"><TD id="E1166" onclick="javascript:toggleLayer('J1166')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> C0 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1166" onclick="javascript:toggleLayer('E1166')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> C0 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1167"><a name="1167"><TD id="E1167" onclick="javascript:toggleLayer('J1167')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Cipher text 0 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1167" onclick="javascript:toggleLayer('E1167')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Cipher text 0 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1168"><a name="1168"><TD id="E1168" onclick="javascript:toggleLayer('J1168')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> C1 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1168" onclick="javascript:toggleLayer('E1168')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> C1 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1169"><a name="1169"><TD id="E1169" onclick="javascript:toggleLayer('J1169')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Cipher text 1 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1169" onclick="javascript:toggleLayer('E1169')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Cipher text 1 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1170"><a name="1170"><TD id="E1170" onclick="javascript:toggleLayer('J1170')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Search 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1170" onclick="javascript:toggleLayer('E1170')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Search 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1171"><a name="1171"><TD id="E1171" onclick="javascript:toggleLayer('J1171')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Search is active 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1171" onclick="javascript:toggleLayer('E1171')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索がアクティブ 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1172"><a name="1172"><TD id="E1172" onclick="javascript:toggleLayer('J1172')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> K 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1172" onclick="javascript:toggleLayer('E1172')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> K 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1173"><a name="1173"><TD id="E1173" onclick="javascript:toggleLayer('J1173')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Key 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1173" onclick="javascript:toggleLayer('E1173')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 鍵 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1174"><a name="1174"><TD id="E1174" onclick="javascript:toggleLayer('J1174')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Mask 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1174" onclick="javascript:toggleLayer('E1174')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Mask 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1175"><a name="1175"><TD id="E1175" onclick="javascript:toggleLayer('J1175')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Plain text bit mask and DES output 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1175" onclick="javascript:toggleLayer('E1175')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 平文ビットマスクとDES出力 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1176"><a name="1176"><TD id="E1176" onclick="javascript:toggleLayer('J1176')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Match=0 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1176" onclick="javascript:toggleLayer('E1176')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Match=0 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1177"><a name="1177"><TD id="E1177" onclick="javascript:toggleLayer('J1177')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> a Zero is found in any bit position of plain text vector as specified in step 4 of Search Unit Operation (see Chapter 2) 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1177" onclick="javascript:toggleLayer('E1177')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 「探索ユニットの仕組み」のStep 4で指定された平文ベクトルのビット位置すべてにゼロが入る（第二章参照） 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1178"><a name="1178"><TD id="E1178" onclick="javascript:toggleLayer('J1178')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> CBC &amp; Extra XOR 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1178" onclick="javascript:toggleLayer('E1178')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> CBC &amp; Extra XOR 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1179"><a name="1179"><TD id="E1179" onclick="javascript:toggleLayer('J1179')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Perform step 3 of Search Unit Operation (see Chapter 2) 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1179" onclick="javascript:toggleLayer('E1179')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 「探索ユニットの仕組み」のStep 3で指定された操作を行う。（第二章参照） 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1180"><a name="1180"><TD ID="TAB1180" onclick="javascript:toggleLayer('J1180')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1180" onclick="javascript:toggleLayer('E1180')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1181"><a name="1181"><TD id="E1181" onclick="javascript:toggleLayer('J1181')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 3-1 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1181" onclick="javascript:toggleLayer('E1181')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 3-1 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1182"><a name="1182"><TD id="E1182" onclick="javascript:toggleLayer('J1182')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 3-2 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1182" onclick="javascript:toggleLayer('E1182')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 3-2 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1183"><a name="1183"><TD id="E1183" onclick="javascript:toggleLayer('J1183')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Figure 3-1. Search Unit Operation Flow Chart 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1183" onclick="javascript:toggleLayer('E1183')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Figure 3-1. 探索ユニットの動きのフローチャート
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1184"><a name="1184"><TD id="E1184" onclick="javascript:toggleLayer('J1184')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> To determine the maximum number of bit required for the Key: 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1184" onclick="javascript:toggleLayer('E1184')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 鍵に必要な最大のビット数を決めるために： 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1185"><a name="1185"><TD id="E1185" onclick="javascript:toggleLayer('J1185')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> K= log2(Maximum combinations/number of chips) 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1185" onclick="javascript:toggleLayer('E1185')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> K= log2(最大組み合わせ数/チップ数) 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1186"><a name="1186"><TD id="E1186" onclick="javascript:toggleLayer('J1186')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> = log2(256/(24 cpc * 64 cpb * 24 boards) = log2(1. 95E12) = 42 bits 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1186" onclick="javascript:toggleLayer('E1186')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> = log2(256/(24 cpc * 64 cpb * 24 基板) = log2(1. 95E12) = 42 ビット 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1187"><a name="1187"><TD id="E1187" onclick="javascript:toggleLayer('J1187')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> If we are going to use 32-bit counters, then it will overflow every: 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1187" onclick="javascript:toggleLayer('E1187')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 32ビットカウンタを使う場合には、これは以下の間隔でオーバーフローすることになる： 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1188"><a name="1188"><TD id="E1188" onclick="javascript:toggleLayer('J1188')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 232 * 16 cycles * 25ns = 1. 72 * 1012ns = 1720 sec = 28. 7 minutes 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1188" onclick="javascript:toggleLayer('E1188')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 232 * 16 cycles * 25ns = 1. 72 * 1012ns = 1720 sec = 28. 7 minutes 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1189"><a name="1189"><TD ID="TAB1189" onclick="javascript:toggleLayer('J1189')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1189" onclick="javascript:toggleLayer('E1189')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1190"><a name="1190"><TD id="E1190" onclick="javascript:toggleLayer('J1190')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 3-3 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1190" onclick="javascript:toggleLayer('E1190')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 3-3 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1191"><a name="1191"><TD id="E1191" onclick="javascript:toggleLayer('J1191')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Figure 3-2 State Diagram tor the Search Unit 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1191" onclick="javascript:toggleLayer('E1191')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Figure 3-2 探索ユニットの状態ダイヤグラム
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1192"><a name="1192"><TD id="E1192" onclick="javascript:toggleLayer('J1192')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Board description 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1192" onclick="javascript:toggleLayer('E1192')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板の説明 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1193"><a name="1193"><TD id="E1193" onclick="javascript:toggleLayer('J1193')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The PC will interface with the ASICs through a parallel card.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1193" onclick="javascript:toggleLayer('E1193')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> コンピュータはパラレルカード経由でASICとインターフェースする。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1194"><a name="1194"><TD id="E1194" onclick="javascript:toggleLayer('J1194')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The parallel card has three ports, assigned: 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1194" onclick="javascript:toggleLayer('E1194')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> パラレルカードにはポートが3つあり、以下のように割り当てられている： 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1195"><a name="1195"><TD id="E1195" onclick="javascript:toggleLayer('J1195')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Port A: Address(7:0) 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1195" onclick="javascript:toggleLayer('E1195')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Port A: アドレス(7:0)
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1196"><a name="1196"><TD id="E1196" onclick="javascript:toggleLayer('J1196')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Port B: Data(7:0) 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1196" onclick="javascript:toggleLayer('E1196')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Port B: データ(7:0)
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1197"><a name="1197"><TD id="E1197" onclick="javascript:toggleLayer('J1197')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Port C: Control, 8 signals 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1197" onclick="javascript:toggleLayer('E1197')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Port C: 制御信号 8 本 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1198"><a name="1198"><TD id="E1198" onclick="javascript:toggleLayer('J1198')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> To reduce the routing resources on the boards and ASICs we multiplex the address lines.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1198" onclick="javascript:toggleLayer('E1198')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板とASICのルーティングリソースを減らすために、アドレス線は多重化してある。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1199"><a name="1199"><TD id="E1199" onclick="javascript:toggleLayer('J1199')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> To access a register on the ASIC, it is required that the software latch the address three times:
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1199" onclick="javascript:toggleLayer('E1199')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ASIC上のレジスタをアクセスするためには、ソフトはアドレスを3回ラッチする必要がある。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1200"><a name="1200"><TD id="E1200" onclick="javascript:toggleLayer('J1200')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Board-ID(7:0), Chip-ID(6:0) and then Register address. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1200" onclick="javascript:toggleLayer('E1200')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板-ID(7:0), チップ-ID(6:0) 最後にレジスタアドレスである。 
 </TD></a></TR><!-- TRANS_PAIR END -->
</TABLE></span><HR>
<a href="des-10.htm">prev</a>
<a href="des-0.htm">0</a>
<a href="des-1.htm">1</a>
<a href="des-2.htm">2</a>
<a href="des-3.htm">3</a>
<a href="des-4.htm">4</a>
<a href="des-5.htm">5</a>
<a href="des-6.htm">6</a>
<a href="des-7.htm">7</a>
<a href="des-8.htm">8</a>
<a href="des-9.htm">9</a>
<a href="des-10.htm">10</a>
<11>
<a href="des-12.htm">12</a>
<a href="des-13.htm">13</a>
<a href="des-14.htm">14</a>
<a href="des-15.htm">15</a>
<a href="des-16.htm">16</a>
<a href="des-17.htm">17</a>
<a href="des-18.htm">18</a>
<a href="des-19.htm">19</a>
<a href="des-20.htm">20</a>
<a href="des-12.htm">next</a>
<hr>

<h2><a name="preamble">このページにある対訳文について</a></h2>このページの対訳文は，再配布可能な作品（<a href="http://www.gutenberg.org/">Project Gutenberg</a> や<a href="http://www.aozora.gr.jp/">青空文庫</a>や<a href="http://www.genpaku.org/">プロジェクト杉田玄白</a>などの作品）について，日本語文と英語文とを対応付けたものの一つです．その他の対訳作品やダウンロードや著作権などについては，<a href="../index.html">日英対訳文対応付けデータのホームページ</a>を見て下さい．また，オリジナルの日英作品の著作権についてはオリジナルの日本語文および英語文の著作権を見て下さい．なお，著作権上の問題がある作品については，情報通信研究機構自然言語グループ内山将夫（ｍｕｔｉｙａｍａ あっとまーく ｎｉｃｔ どっと ｇｏ どっと ｊｐ）まで連絡していただければ，それらについては削除します．<h3>関連ページ</h3><ul><li>オリジナルの英語文: <a href="../org/dese.txt">local copy</a> / <a href="http://cryptome.org/cracking-des.htm">http://cryptome.org/cracking-des.htm</a><li>オリジナルの日本語文: <a href="../org/desj.txt">local copy</a> / <a href="http://www.genpaku.org/crackdes/cracking-desj.html">http://www.genpaku.org/crackdes/cracking-desj.html</a><li><a href="../manual-alignment/des.alm">対訳データ</a></ul><p>
<script type="text/javascript">
<!--
document.F.CE.checked = false
document.F.CJ.checked = false
// -->
</script>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
</BODY></HTML>

