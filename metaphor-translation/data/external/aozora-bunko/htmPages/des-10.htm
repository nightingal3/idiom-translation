<HTML><HEAD><META NAME="ROBOTS" CONTENT="NOINDEX, NOFOLLOW">
<script type="text/javascript">
<!--

IE = (navigator.appName == "Microsoft Internet Explorer")

function lookup(e) {
  if(IE){
    range = document.selection.createRange()
    str = range.text
  }else{
    str = document.getSelection()
  }
  code = str.charCodeAt(0)
  if(code >= 0 && code <= 127){
    str = str.replace(/^[^a-zA-Z0-9]+/,"")
    str = str.replace(/[^a-zA-Z0-9]+$/,"")
    if(str != ""){
      win = open("http://dictionary.goo.ne.jp/search.php?MT="+escape(str)+"&kind=&mode=0", "Goo", "width=600,height=400,scrollbars=yes")
      win.focus()
    }
  } 
}
function showLayer(id){ 
    if(document.getElementById){
        document.getElementById(id).style.visibility = 'visible'
    }else if(document.all){
        document.all(id).style.visibility = 'visible'
    }else if(document.layers){
        document.layers[id].visibility = 'show'
    }
}

reJ = new RegExp('J');
reE = new RegExp('E');
function hideLayer(id){
    if(id.match(reJ) && !document.F.CJ.checked) return
    if(id.match(reE) && !document.F.CE.checked) return
    if(document.getElementById){
        document.getElementById(id).style.visibility = 'hidden'
    }else if(document.all){
        document.all(id).style.visibility = 'hidden'
    }else if(document.layers){
        document.layers[id].visibility = 'hidden'
    }
}
function layerIsVisible(id){
    if(document.getElementById){
        return (document.getElementById(id).style.visibility == 'visible')
    }else if(document.all){
        return (document.all(id).style.visibility == 'visible')
    }else if(document.layers){
        return (document.layers[id].visibility == 'show')
    }
}
function toggleLayer(id){
    if(layerIsVisible(id)){
        hideLayer(id)
    }else{
        showLayer(id)
    }
}

function showOrHideE(eng, jp){
    if(document.F.CE.checked){
        hideLayer(eng)
    }else{
        showLayer(jp)
    }
}

function showOrHideJ(jp, eng){
    if(document.F.CJ.checked){
        hideLayer(jp)
    }else{
        showLayer(eng)
    }
}
				

function hasAttribute2(obj, attr){
    if(IE){
        return true
    }else if(document.getElementById){
        return obj.hasAttribute(attr)
    }else{
        return true
    }
}

reTAB = new RegExp("TAB")
function hideJE(str) {
    re = new RegExp(str);
    spans = document.getElementsByTagName("TD")
    for(i=0; i<spans.length; i++){
        if(hasAttribute2(spans[i], "id")){
            id = spans[i].getAttribute("id")
            if(id.match(re)){
	        hideLayer(id)
            }else if(id.match(reTAB) &&
            (document.F.CJ.checked || document.F.CE.checked)){
                spans[i].setAttribute('BGCOLOR', "#FFFFFF")
            }
	}
    }
}
function showJE(str) {
    re = new RegExp(str);
    spans = document.getElementsByTagName("TD")
    for(i=0; i<spans.length; i++){
        if(hasAttribute2(spans[i], "id")){
            id = spans[i].getAttribute("id")
            if(id.match(re)){
	        showLayer(id)
            }else if(id.match(reTAB) &&
            (!document.F.CJ.checked && !document.F.CE.checked)){
                spans[i].setAttribute('BGCOLOR', "#F0F0F0")
	    }
	}
    }
}
function addRules (){
    obj = document.getElementById('TRANSPAIR');
    obj.rules = 'ALL'
    obj.frame = 'BORDER'
}

function removeRules (){
    obj = document.getElementById('TRANSPAIR');
    obj.rules = 'NONE'
    obj.frame = 'VOID'
}

function onoffJ(){
    if (document.F.CJ.checked) {
        hideJE('J');
        addRules();
    }else{
        showJE('J');
        if(!document.F.CE.checked){
            removeRules();
        }
    }
}
function onoffE(){
    if (document.F.CE.checked) {
        hideJE('E');
        addRules();
    }else{
        showJE('E');
        if(!document.F.CJ.checked){
            removeRules();
        }
    }
}
				
// -->
</script>
</HEAD><BODY BGCOLOR=#FFFFFF><div align=right><a href="../data/titles-ja-pages.htm">タイトル順</a>/<a href="../data/authors-pages.htm">著者順</a>/<a href="../data/translators-pages.htm">訳者順</a>/<a href="../index.html">ホーム</a></div><h2>Cracking DES: Secrets of Encryption Research, Wiretap Politics, and Chip Design / Electronic Frontier Foundation 著</h2><h2>DESのクラック：暗号研究と盗聴政策、チップ設計の秘密  / ELECTRONIC FRONTIER FOUNDATION 著 / 山形浩生 訳</h2><p>Annotator: 高橋真弓</p><div align=right><form name="F"><input type="checkbox" name="CE" onclick="onoffE()">英語文を消す <input type="checkbox" name="CJ" onclick="onoffJ()">日本語文を消す <br>(反対側の文を押すと消えた文が出る)</form></div>オリジナル:<a href="../org/dese.txt">英語文</a>&<a href="../org/desj.txt">日本語文</a> / <a href="../manual-alignment/des.alm">対訳データ</a> / <a href="#preamble">このページにある対訳文について</a>
<TITLE>10 of Cracking DES: Secrets of Encryption Research, Wiretap Politics, and Chip Design</TITLE>
<hr>
<a href="des-9.htm">prev</a>
<a href="des-0.htm">0</a>
<a href="des-1.htm">1</a>
<a href="des-2.htm">2</a>
<a href="des-3.htm">3</a>
<a href="des-4.htm">4</a>
<a href="des-5.htm">5</a>
<a href="des-6.htm">6</a>
<a href="des-7.htm">7</a>
<a href="des-8.htm">8</a>
<a href="des-9.htm">9</a>
<10>
<a href="des-11.htm">11</a>
<a href="des-12.htm">12</a>
<a href="des-13.htm">13</a>
<a href="des-14.htm">14</a>
<a href="des-15.htm">15</a>
<a href="des-16.htm">16</a>
<a href="des-17.htm">17</a>
<a href="des-18.htm">18</a>
<a href="des-19.htm">19</a>
<a href="des-20.htm">20</a>
<a href="des-11.htm">next</a>
<a name="tableBegin"></a><HR><span><TABLE BGCOLOR=#F0F0F0 ID=TRANSPAIR FRAME=VOID RULES=NONE BORDERCOLOR=#000000>
<!-- TRANS_PAIR BEGIN --><TR id="1001"><a name="1001"><TD id="E1001" onclick="javascript:toggleLayer('J1001')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Equals the first ciphertext. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1001" onclick="javascript:toggleLayer('E1001')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 最初の暗号テキスト。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1002"><a name="1002"><TD id="E1002" onclick="javascript:toggleLayer('J1002')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Ciphertext1 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1002" onclick="javascript:toggleLayer('E1002')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Ciphertext1 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1003"><a name="1003"><TD id="E1003" onclick="javascript:toggleLayer('J1003')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Equals the second ciphertext. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1003" onclick="javascript:toggleLayer('E1003')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 二番目の暗号テキスト。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1004"><a name="1004"><TD id="E1004" onclick="javascript:toggleLayer('J1004')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> SearchInfo 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1004" onclick="javascript:toggleLayer('E1004')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> SearchInfo 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1005"><a name="1005"><TD id="E1005" onclick="javascript:toggleLayer('J1005')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> UseCBC is set to 0 if ECB, or set to 1 if the ciphertext was produced using CBC. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1005" onclick="javascript:toggleLayer('E1005')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> UseCBC は ECBなら0にセットされ、暗号文がCBCを使ってつくられたものなら1にセットされる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1006"><a name="1006"><TD id="E1006" onclick="javascript:toggleLayer('J1006')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> ExtraXOR is set to 0. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1006" onclick="javascript:toggleLayer('E1006')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ExtraXOR は 0にセット。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1007"><a name="1007"><TD id="E1007" onclick="javascript:toggleLayer('J1007')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> PlaintextByteMask 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1007" onclick="javascript:toggleLayer('E1007')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> PlaintextByteMask 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1008"><a name="1008"><TD id="E1008" onclick="javascript:toggleLayer('J1008')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Set to 0x00 (all bytes used). 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1008" onclick="javascript:toggleLayer('E1008')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 0x00にセット (全バイト使用). 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1009"><a name="1009"><TD id="E1009" onclick="javascript:toggleLayer('J1009')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> PlaintextXorMask 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1009" onclick="javascript:toggleLayer('E1009')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> PlaintextXorMask 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1010"><a name="1010"><TD id="E1010" onclick="javascript:toggleLayer('J1010')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Set to 0x0000000000000000 for ECB, to IV for CBC. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1010" onclick="javascript:toggleLayer('E1010')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ECBなら 0x0000000000000000 にセット、CBC なら IV（初期化ベクトル） にセット。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1011"><a name="1011"><TD id="E1011" onclick="javascript:toggleLayer('J1011')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The probability that the two (random) candidate plaintexts produced by an incorrect key will contain only the ASCII text characters listed above is (55/256)16.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1011" onclick="javascript:toggleLayer('E1011')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> まちがった鍵によって復号された二つの（ランダムな）候補となる平文が、上で述べたASCII文字だけになる可能性は (55/256)16 だ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1012"><a name="1012"><TD id="E1012" onclick="javascript:toggleLayer('J1012')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> In a search, there will thus be an average of 255 (55/256)16 = 742358 false positives which need to be rejected by the computer.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1012" onclick="javascript:toggleLayer('E1012')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> したがって探索では、コンピュータがはねるべきもっともらしい結果が平均で 255 (55/256)16 = 742358 通りあることになる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1013"><a name="1013"><TD id="E1013" onclick="javascript:toggleLayer('J1013')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> For one key in about 220,000, the first check will pass and an extra DES will be required. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1013" onclick="javascript:toggleLayer('E1013')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 22万鍵に一つは、最初のチェックをパスして、二回目のDESが必要になる
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1014"><a name="1014"><TD id="E1014" onclick="javascript:toggleLayer('J1014')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> (The time for these extra DES operations is insignificant.)
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1014" onclick="javascript:toggleLayer('E1014')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> （こうした追加のDESの時間は無視できる）。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1015"><a name="1015"><TD id="E1015" onclick="javascript:toggleLayer('J1015')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Idle time lost while waiting for false positives to be cleared is also insignificant.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1015" onclick="javascript:toggleLayer('E1015')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> もっともらしい結果がはねられるのを待つ時間も無視できる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1016"><a name="1016"><TD id="E1016" onclick="javascript:toggleLayer('J1016')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> If the computer checks each search unit's SearchActive flag once per second, a total of 0.5 search unit seconds will be wasted for every false positive,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1016" onclick="javascript:toggleLayer('E1016')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> もしコンピュータが各探索ユニットのSearchActiveフラグを一秒に一回ずつチェックするとしたら、もっともらしい結果一つあたりで、0.5探索ユニット秒が無駄になるだけ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1017"><a name="1017"><TD id="E1017" onclick="javascript:toggleLayer('J1017')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> or a total of 103 search-unit hours, out of about 4 million search-unit hours for the whole search. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1017" onclick="javascript:toggleLayer('E1017')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> つまり探索全体では、400万探索ユニット・時間がかかることになるが、そのなかの103探索ユニット時間が無駄になるだけだ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1018"><a name="1018"><TD ID="TAB1018" onclick="javascript:toggleLayer('J1018')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1018" onclick="javascript:toggleLayer('E1018')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1019"><a name="1019"><TD id="E1019" onclick="javascript:toggleLayer('J1019')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 2-8 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1019" onclick="javascript:toggleLayer('E1019')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 2-8 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1020"><a name="1020"><TD id="E1020" onclick="javascript:toggleLayer('J1020')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> When programming CBC mode, note that the PlaintextXorMask must be set to the IV (or the previous ciphertext, if the ciphertext being attacked is not in the first block). 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1020" onclick="javascript:toggleLayer('E1020')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> CBCモードのプログラミングでは、 PlaintextXorMask は初期化ベクトル（あるいは攻撃している暗号文が最初のブロックでない場合には、前の暗号文）にセットしなくてはならない。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1021"><a name="1021"><TD id="E1021" onclick="javascript:toggleLayer('J1021')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Matt Blaze's Challenge 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1021" onclick="javascript:toggleLayer('E1021')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Matt Blaze式チャレンジ 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1022"><a name="1022"><TD id="E1022" onclick="javascript:toggleLayer('J1022')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The goal is to find a case where all plaintext bytes are equal and all ciphertext bytes are equal. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1022" onclick="javascript:toggleLayer('E1022')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 目標は、すべての平文バイトが等しくて、すべての暗号文のバイトも等しいような場合を見つけることだ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1023"><a name="1023"><TD id="E1023" onclick="javascript:toggleLayer('J1023')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> PlaintextVector 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1023" onclick="javascript:toggleLayer('E1023')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> PlaintextVector 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1024"><a name="1024"><TD id="E1024" onclick="javascript:toggleLayer('J1024')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Set only bit 0. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1024" onclick="javascript:toggleLayer('E1024')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ビット0だけをセット。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1025"><a name="1025"><TD id="E1025" onclick="javascript:toggleLayer('J1025')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Ciphertext0 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1025" onclick="javascript:toggleLayer('E1025')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Ciphertext0 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1026"><a name="1026"><TD id="E1026" onclick="javascript:toggleLayer('J1026')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Set to a fixed value with all bytes equal 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1026" onclick="javascript:toggleLayer('E1026')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> すべてのバイトを等しくした固定値に。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1027"><a name="1027"><TD id="E1027" onclick="javascript:toggleLayer('J1027')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Ciphertext1 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1027" onclick="javascript:toggleLayer('E1027')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Ciphertext1 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1028"><a name="1028"><TD id="E1028" onclick="javascript:toggleLayer('J1028')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Same as Ciphertext0. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1028" onclick="javascript:toggleLayer('E1028')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Ciphertext0と同じ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1029"><a name="1029"><TD id="E1029" onclick="javascript:toggleLayer('J1029')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> SearchInfo 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1029" onclick="javascript:toggleLayer('E1029')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> SearchInfo 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1030"><a name="1030"><TD id="E1030" onclick="javascript:toggleLayer('J1030')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> UseCBC is set to 0.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1030" onclick="javascript:toggleLayer('E1030')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> UseCBC は0にセット。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1031"><a name="1031"><TD id="E1031" onclick="javascript:toggleLayer('J1031')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> ExtraXOR is set to 1. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1031" onclick="javascript:toggleLayer('E1031')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ExtraXOR は1にセット。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1032"><a name="1032"><TD id="E1032" onclick="javascript:toggleLayer('J1032')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> PlaintextByteMask 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1032" onclick="javascript:toggleLayer('E1032')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> PlaintextByteMask 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1033"><a name="1033"><TD id="E1033" onclick="javascript:toggleLayer('J1033')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Set to 0x0F (only left half examined). 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1033" onclick="javascript:toggleLayer('E1033')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 0x0Fにセット (左半分だけがチェックされる） 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1034"><a name="1034"><TD id="E1034" onclick="javascript:toggleLayer('J1034')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> PlaintextXorMask 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1034" onclick="javascript:toggleLayer('E1034')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> PlaintextXorMask 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1035"><a name="1035"><TD id="E1035" onclick="javascript:toggleLayer('J1035')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Set to 0x0000000000000000. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1035" onclick="javascript:toggleLayer('E1035')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 0x0000000000000000にセット。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1036"><a name="1036"><TD id="E1036" onclick="javascript:toggleLayer('J1036')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> If the right and left half are equal, as must be the case if all plaintext bytes are the same,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1036" onclick="javascript:toggleLayer('E1036')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 平文のバイトがすべて等しければ、つまり右半分と左半分は等しくなる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1037"><a name="1037"><TD id="E1037" onclick="javascript:toggleLayer('J1037')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> then when the ExtraXOR bit's status causes the L=L XOR R step, L will become equal to 0.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1037" onclick="javascript:toggleLayer('E1037')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このとき、 ExtraXOR ビットのステータスのために L=L XOR R となったら、Lは0になる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1038"><a name="1038"><TD id="E1038" onclick="javascript:toggleLayer('J1038')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The plaintext byte mask selects only the left half and the PlaintextVector makes sure the 4 bytes are 0. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1038" onclick="javascript:toggleLayer('E1038')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 平文マスクは左半分だけを選び、 PlaintextVector で、それが0かどうか確認できる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1039"><a name="1039"><TD id="E1039" onclick="javascript:toggleLayer('J1039')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> False positives occur whenever L=R,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1039" onclick="javascript:toggleLayer('E1039')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> もっともらしいケースは、L=Rのときに起こる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1040"><a name="1040"><TD id="E1040" onclick="javascript:toggleLayer('J1040')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> or with one key in 232.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1040" onclick="javascript:toggleLayer('E1040')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これは232に一つの鍵で起こるわけだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1041"><a name="1041"><TD id="E1041" onclick="javascript:toggleLayer('J1041')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Because this search is not guaranteed to terminate after 256 operations, the average time is 256 (not 255).
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1041" onclick="javascript:toggleLayer('E1041')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> この探索は256通りためして終わるという保証はないので、平均時間は256になる (255ではない)。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1042"><a name="1042"><TD id="E1042" onclick="javascript:toggleLayer('J1042')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The number of false positives is expected to be 256 / 232 = 224 = 16.8 million.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1042" onclick="javascript:toggleLayer('E1042')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> もっともらしいケースの数は 256 / 232 = 224 = 1.68 億通りとなる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1043"><a name="1043"><TD id="E1043" onclick="javascript:toggleLayer('J1043')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Each search unit will thus find a false positive every 232 keys on average, 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1043" onclick="javascript:toggleLayer('E1043')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> したがって各探索ユニットは、平均で 232 鍵ごとにもっともらしいものにあたる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1044"><a name="1044"><TD id="E1044" onclick="javascript:toggleLayer('J1044')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> or about once every half hour.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1044" onclick="javascript:toggleLayer('E1044')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> つまりは30分に一回ずつくらい、ということだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1045"><a name="1045"><TD id="E1045" onclick="javascript:toggleLayer('J1045')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> At 1 second polling of search units, (0.5)(16.8 million)/3600 = 2333 search unit hours will be idle
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1045" onclick="javascript:toggleLayer('E1045')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各探索ユニットを1秒に1回調べるとすると、アイドリング状態になるのは (0.5)(16.8 million)/3600 = 2333 探索ユニット時間
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1046"><a name="1046"><TD id="E1046" onclick="javascript:toggleLayer('J1046')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> (still under 1% of the total).
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1046" onclick="javascript:toggleLayer('E1046')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> （これでも全体の1％以下）。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1047"><a name="1047"><TD id="E1047" onclick="javascript:toggleLayer('J1047')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The host computer will need to do the 16.8 million DES operations (on average), but even a fairly poor DES implementation can do this in just a few minutes. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1047" onclick="javascript:toggleLayer('E1047')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストコンピュータは、1.68億通り（平均）のDES操作をやらなくてはならいが、かなり下手なDES実装でも、数分あればこれは可能だ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1048"><a name="1048"><TD ID="TAB1048" onclick="javascript:toggleLayer('J1048')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1048" onclick="javascript:toggleLayer('E1048')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1049"><a name="1049"><TD id="E1049" onclick="javascript:toggleLayer('J1049')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 2-9 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1049" onclick="javascript:toggleLayer('E1049')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 2-9 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1050"><a name="1050"><TD id="E1050" onclick="javascript:toggleLayer('J1050')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Scalability and Performance 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1050" onclick="javascript:toggleLayer('E1050')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> スケーラビリティと性能 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1051"><a name="1051"><TD id="E1051" onclick="javascript:toggleLayer('J1051')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The architecture was intended to find DES keys in less than 10 days on average.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1051" onclick="javascript:toggleLayer('E1051')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このアーキテクチャは、DES鍵を平均で10日以下で見つけるように意図されている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1052"><a name="1052"><TD id="E1052" onclick="javascript:toggleLayer('J1052')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The performance of the initial implementation is specified in Figure 2-4.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1052" onclick="javascript:toggleLayer('E1052')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Figure 2-4に最初の実装の性能を示す。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1053"><a name="1053"><TD id="E1053" onclick="javascript:toggleLayer('J1053')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Faster results can be easily obtained with increased hardware;
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1053" onclick="javascript:toggleLayer('E1053')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ハードをふやせば、もっと高速な結果は簡単に得られる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1054"><a name="1054"><TD id="E1054" onclick="javascript:toggleLayer('J1054')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> doubling the amount of hardware will halve the time per result.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1054" onclick="javascript:toggleLayer('E1054')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ハードの量を増やせば結果を出すのに必要な時間は半分になる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1055"><a name="1055"><TD id="E1055" onclick="javascript:toggleLayer('J1055')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Within the design, boards of keysearch ASICs can be added and removed easily, making it simple to make smaller or larger systems,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1055" onclick="javascript:toggleLayer('E1055')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> キー探索ASICの基板は簡単に足したり減らしたりできるような設計になっていて、システムを大規模にも小規模にもできる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1056"><a name="1056"><TD id="E1056" onclick="javascript:toggleLayer('J1056')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> where larger systems cost more but find results more quickly.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1056" onclick="javascript:toggleLayer('E1056')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 大規模システムはコストはかかるが、結果はもっとはやくわかる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1057"><a name="1057"><TD id="E1057" onclick="javascript:toggleLayer('J1057')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Larger systems will have additional power and cooling requirements. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1057" onclick="javascript:toggleLayer('E1057')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> またシステムが大きくなると、電源と冷却も強力なものが必要となる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1058"><a name="1058"><TD id="E1058" onclick="javascript:toggleLayer('J1058')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Figure 2-4: Performance Estimate 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1058" onclick="javascript:toggleLayer('E1058')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Figure 2-4: 推定性能 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1059"><a name="1059"><TD id="E1059" onclick="javascript:toggleLayer('J1059')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Total ASICs1536
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1059" onclick="javascript:toggleLayer('E1059')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ASIC総数1536
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1060"><a name="1060"><TD id="E1060" onclick="javascript:toggleLayer('J1060')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Search units per ASIC24
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1060" onclick="javascript:toggleLayer('E1060')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ASICあたりの探索ユニット24
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1061"><a name="1061"><TD id="E1061" onclick="javascript:toggleLayer('J1061')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Total search units36864
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1061" onclick="javascript:toggleLayer('E1061')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索ユニット総数36864
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1062"><a name="1062"><TD id="E1062" onclick="javascript:toggleLayer('J1062')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Clock speed (Hz)4.00E+07
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1062" onclick="javascript:toggleLayer('E1062')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> クロック速度 (Hz)4.00E+07
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1063"><a name="1063"><TD id="E1063" onclick="javascript:toggleLayer('J1063')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Clocks per key (typical)16
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1063" onclick="javascript:toggleLayer('E1063')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> キーあたり必要クロック（平均）16
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1064"><a name="1064"><TD id="E1064" onclick="javascript:toggleLayer('J1064')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> DES keys per search unit per second2.50E+06
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1064" onclick="javascript:toggleLayer('E1064')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索ユニットあたり毎秒処理DES鍵数2.50E+06
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1065"><a name="1065"><TD id="E1065" onclick="javascript:toggleLayer('J1065')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Total DES keys per second9.22E+10
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1065" onclick="javascript:toggleLayer('E1065')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> システム全体での毎秒処理DES鍵9.22E+10
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1066"><a name="1066"><TD id="E1066" onclick="javascript:toggleLayer('J1066')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Search size (worst case)7.21E+16
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1066" onclick="javascript:toggleLayer('E1066')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索サイズ（最悪ケース）7.21E+16
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1067"><a name="1067"><TD id="E1067" onclick="javascript:toggleLayer('J1067')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Seconds per result (worst case)7.82E+05
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1067" onclick="javascript:toggleLayer('E1067')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 結果が出るまでの必要秒数（最悪ケース）7.82E+05
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1068"><a name="1068"><TD id="E1068" onclick="javascript:toggleLayer('J1068')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Days per result (worst case)9.05
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1068" onclick="javascript:toggleLayer('E1068')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 結果が出るまでの必要日数（最悪ケース）9.05
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1069"><a name="1069"><TD id="E1069" onclick="javascript:toggleLayer('J1069')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Search size (average case)3.60E+16
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1069" onclick="javascript:toggleLayer('E1069')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索サイズ（平均）3.60E+16
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1070"><a name="1070"><TD id="E1070" onclick="javascript:toggleLayer('J1070')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Seconds per result (average case)3.91E+05
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1070" onclick="javascript:toggleLayer('E1070')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 結果が出るまでの必要秒数（平均）3.91E+05
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1071"><a name="1071"><TD id="E1071" onclick="javascript:toggleLayer('J1071')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Days per result (average case) 4.52 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1071" onclick="javascript:toggleLayer('E1071')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 結果が出るまでの必要日数（平均）4.52
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1072"><a name="1072"><TD id="E1072" onclick="javascript:toggleLayer('J1072')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Host Computer Software 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1072" onclick="javascript:toggleLayer('E1072')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストコンピュータのソフト 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1073"><a name="1073"><TD id="E1073" onclick="javascript:toggleLayer('J1073')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Cryptography Research will write the following software: 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1073" onclick="javascript:toggleLayer('E1073')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Cryptography Research が以下のソフトを書く予定。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1074"><a name="1074"><TD id="E1074" onclick="javascript:toggleLayer('J1074')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Simulation 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1074" onclick="javascript:toggleLayer('E1074')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> シミュレーション 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1075"><a name="1075"><TD id="E1075" onclick="javascript:toggleLayer('J1075')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Cryptography Research will develop software to generate test vectors for the chip for testing before the design is sent to the fab.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1075" onclick="javascript:toggleLayer('E1075')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Cryptography Research は、チップデザインがファブリケーションに送られる前にチップをテストするための、テストベクトル生成ソフトを書く。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1076"><a name="1076"><TD id="E1076" onclick="javascript:toggleLayer('J1076')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> This software will test all features on the chip and all modes of operation.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1076" onclick="javascript:toggleLayer('E1076')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このソフトはチップ上のあらゆる機能をテストし、あらゆるオペレーションのモードをチェックする。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1077"><a name="1077"><TD id="E1077" onclick="javascript:toggleLayer('J1077')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> This program will have a simple command line interface. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1077" onclick="javascript:toggleLayer('E1077')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このプログラムは、簡単なコマンドライン・インターフェースを持つ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1078"><a name="1078"><TD id="E1078" onclick="javascript:toggleLayer('J1078')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Host computer 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1078" onclick="javascript:toggleLayer('E1078')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストコンピュータ 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1079"><a name="1079"><TD id="E1079" onclick="javascript:toggleLayer('J1079')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The host computer software program will implement the standard search tasks of breaking a known plaintext, breaking encrypted ASCII text (ECB and CBC modes), and solving the Matt Blaze challenge.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1079" onclick="javascript:toggleLayer('E1079')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストコンピュータ用のソフトウェアは、平文がわかっている場合の鍵派遣、暗号化されたASCII文の解読（ECBとCBCモード）、Matt Blaze式チャレンジ解決をする通常の探索タスクを実装する。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1080"><a name="1080"><TD id="E1080" onclick="javascript:toggleLayer('J1080')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> These programs will be written in standard ANSI C, except for platform-specific I/O code.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1080" onclick="javascript:toggleLayer('E1080')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このソフトはプラットホーム固有の I/O コードをのぞけば、ふつうの ANSI C でかかれる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1081"><a name="1081"><TD id="E1081" onclick="javascript:toggleLayer('J1081')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 2-10 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1081" onclick="javascript:toggleLayer('E1081')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 2-10 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1082"><a name="1082"><TD id="E1082" onclick="javascript:toggleLayer('J1082')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The host program will also have a test mode,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1082" onclick="javascript:toggleLayer('E1082')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストプログラムにはまたテストモードも持つ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1083"><a name="1083"><TD id="E1083" onclick="javascript:toggleLayer('J1083')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> which loads search units with tasks that are known to halt reasonably quickly (e.g., after searching a few million keys) and verifies the results to detect any failed parts.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1083" onclick="javascript:toggleLayer('E1083')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これは探索ユニットに、すぐ止まるのがわかっているようなタスク（たとえばほんの数百万鍵を探せばすむようなタスク）をロードしてみて、出てきた結果を確認してどこか異常はないかを検出する。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1084"><a name="1084"><TD id="E1084" onclick="javascript:toggleLayer('J1084')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> (The software will include the capability of bypassing bad search units during search operations.)
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1084" onclick="javascript:toggleLayer('E1084')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> （ソフトには、探索の途中で不良探索ユニットをバイパスする機能がついている）。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1085"><a name="1085"><TD id="E1085" onclick="javascript:toggleLayer('J1085')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Users who wish to perform unusual searches will need to add a custom function to determining whether candidate keys are actually correct and recompile the code. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1085" onclick="javascript:toggleLayer('E1085')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 通常以外の探索をしたいユーザは、カスタム関数を付け加えて、候補として出てきたキーが本当に正しいかがチェックできるようにしたうえで、コードをコンパイルしなおすこと。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1086"><a name="1086"><TD id="E1086" onclick="javascript:toggleLayer('J1086')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The initial version of this program will have a simple command line interface and will be written for DOS.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1086" onclick="javascript:toggleLayer('E1086')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このプログラムの最初のバージョンは、単純なコマンドライン式のインターフェースを持ち、DOS用に書かれる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1087"><a name="1087"><TD id="E1087" onclick="javascript:toggleLayer('J1087')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A Linux port will also be written, but may not be ready by the initial target completion date.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1087" onclick="javascript:toggleLayer('E1087')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Linuxへの移植もされるが、最初の目標完成日には間に合わないかもしれない。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1088"><a name="1088"><TD id="E1088" onclick="javascript:toggleLayer('J1088')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> (Because the only platform-specific code will be the I/O functions, it should be very easy to port to any platform with an appropriate compiler.)
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1088" onclick="javascript:toggleLayer('E1088')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> （プラットホームに依存するコードというのは、I/O部分だけなので、まともなコンパイラがあればどんなプラットホームへも簡単に移植できるはずだ）。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1089"><a name="1089"><TD id="E1089" onclick="javascript:toggleLayer('J1089')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Software programs will identify the participants in the project (AWT, EFF, and Cryptography Research). 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1089" onclick="javascript:toggleLayer('E1089')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ソフトプログラムは、プロジェクト参加者 (AWT, EFF, and Cryptography Research) を明示する。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1090"><a name="1090"><TD id="E1090" onclick="javascript:toggleLayer('J1090')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Cryptography Research will also produce a version with a prettier user interface
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1090" onclick="javascript:toggleLayer('E1090')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Cryptography Research はまた、もっときれいなインターフェースを持ったバージョンをつくる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1091"><a name="1091"><TD id="E1091" onclick="javascript:toggleLayer('J1091')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> to make the demonstration more elegant
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1091" onclick="javascript:toggleLayer('E1091')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これは、デモをもっとかっこよくできるようにするためのモノだ
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1092"><a name="1092"><TD id="E1092" onclick="javascript:toggleLayer('J1092')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> (platform-to-be-determined). 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1092" onclick="javascript:toggleLayer('E1092')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> （プラットホームは未定）。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1093"><a name="1093"><TD id="E1093" onclick="javascript:toggleLayer('J1093')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> All software and source code will be placed in the public domain. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1093" onclick="javascript:toggleLayer('E1093')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ソフトとソースコードはすべてパブリックドメインにおかれる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="1094"><a name="1094"><TD ID="TAB1094" onclick="javascript:toggleLayer('J1094')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB1094" onclick="javascript:toggleLayer('E1094')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="1095"><a name="1095"><TD id="E1095" onclick="javascript:toggleLayer('J1095')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Glossary 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1095" onclick="javascript:toggleLayer('E1095')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 用語集 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1096"><a name="1096"><TD id="E1096" onclick="javascript:toggleLayer('J1096')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> BoardID 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1096" onclick="javascript:toggleLayer('E1096')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板ID 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1097"><a name="1097"><TD id="E1097" onclick="javascript:toggleLayer('J1097')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> An 8-bit identifier unique for each board.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1097" onclick="javascript:toggleLayer('E1097')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各基板ごとに与えられる、固有の8ビットid。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1098"><a name="1098"><TD id="E1098" onclick="javascript:toggleLayer('J1098')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> This will be set with a DIP switch on the board.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1098" onclick="javascript:toggleLayer('E1098')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これは基板上のdipスイッチでセットする。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1099"><a name="1099"><TD id="E1099" onclick="javascript:toggleLayer('J1099')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The host computer addresses chips by their ChipID and BoardID. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1099" onclick="javascript:toggleLayer('E1099')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ホストコンピュータはチップをアクセスするのに、チップIDと基板IDを使う。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="1100"><a name="1100"><TD id="E1100" onclick="javascript:toggleLayer('J1100')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> CBC mode 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J1100" onclick="javascript:toggleLayer('E1100')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> CBC モード 
 </TD></a></TR><!-- TRANS_PAIR END -->
</TABLE></span><HR>
<a href="des-9.htm">prev</a>
<a href="des-0.htm">0</a>
<a href="des-1.htm">1</a>
<a href="des-2.htm">2</a>
<a href="des-3.htm">3</a>
<a href="des-4.htm">4</a>
<a href="des-5.htm">5</a>
<a href="des-6.htm">6</a>
<a href="des-7.htm">7</a>
<a href="des-8.htm">8</a>
<a href="des-9.htm">9</a>
<10>
<a href="des-11.htm">11</a>
<a href="des-12.htm">12</a>
<a href="des-13.htm">13</a>
<a href="des-14.htm">14</a>
<a href="des-15.htm">15</a>
<a href="des-16.htm">16</a>
<a href="des-17.htm">17</a>
<a href="des-18.htm">18</a>
<a href="des-19.htm">19</a>
<a href="des-20.htm">20</a>
<a href="des-11.htm">next</a>
<hr>

<h2><a name="preamble">このページにある対訳文について</a></h2>このページの対訳文は，再配布可能な作品（<a href="http://www.gutenberg.org/">Project Gutenberg</a> や<a href="http://www.aozora.gr.jp/">青空文庫</a>や<a href="http://www.genpaku.org/">プロジェクト杉田玄白</a>などの作品）について，日本語文と英語文とを対応付けたものの一つです．その他の対訳作品やダウンロードや著作権などについては，<a href="../index.html">日英対訳文対応付けデータのホームページ</a>を見て下さい．また，オリジナルの日英作品の著作権についてはオリジナルの日本語文および英語文の著作権を見て下さい．なお，著作権上の問題がある作品については，情報通信研究機構自然言語グループ内山将夫（ｍｕｔｉｙａｍａ あっとまーく ｎｉｃｔ どっと ｇｏ どっと ｊｐ）まで連絡していただければ，それらについては削除します．<h3>関連ページ</h3><ul><li>オリジナルの英語文: <a href="../org/dese.txt">local copy</a> / <a href="http://cryptome.org/cracking-des.htm">http://cryptome.org/cracking-des.htm</a><li>オリジナルの日本語文: <a href="../org/desj.txt">local copy</a> / <a href="http://www.genpaku.org/crackdes/cracking-desj.html">http://www.genpaku.org/crackdes/cracking-desj.html</a><li><a href="../manual-alignment/des.alm">対訳データ</a></ul><p>
<script type="text/javascript">
<!--
document.F.CE.checked = false
document.F.CJ.checked = false
// -->
</script>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
</BODY></HTML>

