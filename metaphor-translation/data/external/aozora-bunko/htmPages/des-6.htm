<HTML><HEAD><META NAME="ROBOTS" CONTENT="NOINDEX, NOFOLLOW">
<script type="text/javascript">
<!--

IE = (navigator.appName == "Microsoft Internet Explorer")

function lookup(e) {
  if(IE){
    range = document.selection.createRange()
    str = range.text
  }else{
    str = document.getSelection()
  }
  code = str.charCodeAt(0)
  if(code >= 0 && code <= 127){
    str = str.replace(/^[^a-zA-Z0-9]+/,"")
    str = str.replace(/[^a-zA-Z0-9]+$/,"")
    if(str != ""){
      win = open("http://dictionary.goo.ne.jp/search.php?MT="+escape(str)+"&kind=&mode=0", "Goo", "width=600,height=400,scrollbars=yes")
      win.focus()
    }
  } 
}
function showLayer(id){ 
    if(document.getElementById){
        document.getElementById(id).style.visibility = 'visible'
    }else if(document.all){
        document.all(id).style.visibility = 'visible'
    }else if(document.layers){
        document.layers[id].visibility = 'show'
    }
}

reJ = new RegExp('J');
reE = new RegExp('E');
function hideLayer(id){
    if(id.match(reJ) && !document.F.CJ.checked) return
    if(id.match(reE) && !document.F.CE.checked) return
    if(document.getElementById){
        document.getElementById(id).style.visibility = 'hidden'
    }else if(document.all){
        document.all(id).style.visibility = 'hidden'
    }else if(document.layers){
        document.layers[id].visibility = 'hidden'
    }
}
function layerIsVisible(id){
    if(document.getElementById){
        return (document.getElementById(id).style.visibility == 'visible')
    }else if(document.all){
        return (document.all(id).style.visibility == 'visible')
    }else if(document.layers){
        return (document.layers[id].visibility == 'show')
    }
}
function toggleLayer(id){
    if(layerIsVisible(id)){
        hideLayer(id)
    }else{
        showLayer(id)
    }
}

function showOrHideE(eng, jp){
    if(document.F.CE.checked){
        hideLayer(eng)
    }else{
        showLayer(jp)
    }
}

function showOrHideJ(jp, eng){
    if(document.F.CJ.checked){
        hideLayer(jp)
    }else{
        showLayer(eng)
    }
}
				

function hasAttribute2(obj, attr){
    if(IE){
        return true
    }else if(document.getElementById){
        return obj.hasAttribute(attr)
    }else{
        return true
    }
}

reTAB = new RegExp("TAB")
function hideJE(str) {
    re = new RegExp(str);
    spans = document.getElementsByTagName("TD")
    for(i=0; i<spans.length; i++){
        if(hasAttribute2(spans[i], "id")){
            id = spans[i].getAttribute("id")
            if(id.match(re)){
	        hideLayer(id)
            }else if(id.match(reTAB) &&
            (document.F.CJ.checked || document.F.CE.checked)){
                spans[i].setAttribute('BGCOLOR', "#FFFFFF")
            }
	}
    }
}
function showJE(str) {
    re = new RegExp(str);
    spans = document.getElementsByTagName("TD")
    for(i=0; i<spans.length; i++){
        if(hasAttribute2(spans[i], "id")){
            id = spans[i].getAttribute("id")
            if(id.match(re)){
	        showLayer(id)
            }else if(id.match(reTAB) &&
            (!document.F.CJ.checked && !document.F.CE.checked)){
                spans[i].setAttribute('BGCOLOR', "#F0F0F0")
	    }
	}
    }
}
function addRules (){
    obj = document.getElementById('TRANSPAIR');
    obj.rules = 'ALL'
    obj.frame = 'BORDER'
}

function removeRules (){
    obj = document.getElementById('TRANSPAIR');
    obj.rules = 'NONE'
    obj.frame = 'VOID'
}

function onoffJ(){
    if (document.F.CJ.checked) {
        hideJE('J');
        addRules();
    }else{
        showJE('J');
        if(!document.F.CE.checked){
            removeRules();
        }
    }
}
function onoffE(){
    if (document.F.CE.checked) {
        hideJE('E');
        addRules();
    }else{
        showJE('E');
        if(!document.F.CJ.checked){
            removeRules();
        }
    }
}
				
// -->
</script>
</HEAD><BODY BGCOLOR=#FFFFFF><div align=right><a href="../data/titles-ja-pages.htm">タイトル順</a>/<a href="../data/authors-pages.htm">著者順</a>/<a href="../data/translators-pages.htm">訳者順</a>/<a href="../index.html">ホーム</a></div><h2>Cracking DES: Secrets of Encryption Research, Wiretap Politics, and Chip Design / Electronic Frontier Foundation 著</h2><h2>DESのクラック：暗号研究と盗聴政策、チップ設計の秘密  / ELECTRONIC FRONTIER FOUNDATION 著 / 山形浩生 訳</h2><p>Annotator: 高橋真弓</p><div align=right><form name="F"><input type="checkbox" name="CE" onclick="onoffE()">英語文を消す <input type="checkbox" name="CJ" onclick="onoffJ()">日本語文を消す <br>(反対側の文を押すと消えた文が出る)</form></div>オリジナル:<a href="../org/dese.txt">英語文</a>&<a href="../org/desj.txt">日本語文</a> / <a href="../manual-alignment/des.alm">対訳データ</a> / <a href="#preamble">このページにある対訳文について</a>
<TITLE>6 of Cracking DES: Secrets of Encryption Research, Wiretap Politics, and Chip Design</TITLE>
<hr>
<a href="des-5.htm">prev</a>
<a href="des-0.htm">0</a>
<a href="des-1.htm">1</a>
<a href="des-2.htm">2</a>
<a href="des-3.htm">3</a>
<a href="des-4.htm">4</a>
<a href="des-5.htm">5</a>
<6>
<a href="des-7.htm">7</a>
<a href="des-8.htm">8</a>
<a href="des-9.htm">9</a>
<a href="des-10.htm">10</a>
<a href="des-11.htm">11</a>
<a href="des-12.htm">12</a>
<a href="des-13.htm">13</a>
<a href="des-14.htm">14</a>
<a href="des-15.htm">15</a>
<a href="des-16.htm">16</a>
<a href="des-17.htm">17</a>
<a href="des-18.htm">18</a>
<a href="des-19.htm">19</a>
<a href="des-20.htm">20</a>
<a href="des-7.htm">next</a>
<a name="tableBegin"></a><HR><span><TABLE BGCOLOR=#F0F0F0 ID=TRANSPAIR FRAME=VOID RULES=NONE BORDERCOLOR=#000000>
<!-- TRANS_PAIR BEGIN --><TR id="601"><a name="601"><TD id="E601" onclick="javascript:toggleLayer('J601')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The chip can also decrypt ciphertext that was encrypted in "Cipher Block  Chaining" mode.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J601" onclick="javascript:toggleLayer('E601')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チップはまた、「暗号ブロック連鎖モード（Cipher Block Chaining）」モードで暗号化された暗号も復号できる設計となっている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="602"><a name="602"><TD id="E602" onclick="javascript:toggleLayer('J602')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> In this mode, the ciphertext of each block is exclusive-OR'd into the plaintext of the next block before it is encrypted.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J602" onclick="javascript:toggleLayer('E602')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このモードでは、各ブロックの暗号文は、暗号化される前に次のブロックの平文にXORされる
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="603"><a name="603"><TD id="E603" onclick="javascript:toggleLayer('J603')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> (An "initialization vector" is exclusive-OR'd into the first block of plaintext.) 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J603" onclick="javascript:toggleLayer('E603')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> （平文の最初のブロックには「初期化ベクトル」がXORされる）。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="604"><a name="604"><TD id="E604" onclick="javascript:toggleLayer('J604')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The search unit knows how to exclusive-OR out an Initialization Vector (IV) after decrypting the first ciphertext, and to exclusive-OR out the first ciphertext after decrypting the second one.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J604" onclick="javascript:toggleLayer('E604')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索ユニットは、最初の暗号文を復号してから、初期化ベクトル（IV）をXORしてはずすやりかたを知っているし、さらに二番目の暗号文を復号してから最初の暗号文をXORしてはずす方法も知っている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="605"><a name="605"><TD id="E605" onclick="javascript:toggleLayer('J605')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The software specifies the IV at the same time it provides the ciphertext values. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J605" onclick="javascript:toggleLayer('E605')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> IVの指定は、暗号文の値を指定するときと同時にソフトが指定する。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="606"><a name="606"><TD id="E606" onclick="javascript:toggleLayer('J606')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Blaze Challenge 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J606" onclick="javascript:toggleLayer('E606')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Blaze 式チャレンジ 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="607"><a name="607"><TD id="E607" onclick="javascript:toggleLayer('J607')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> In June, 1997 Matt Blaze, a cryptography researcher at AT&amp;T, proposed a different sort of cryptographic challenge.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J607" onclick="javascript:toggleLayer('E607')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 1997年6月には、AT&amp;Tの暗号研究者のMatt Blazeが、別の種類の暗号問題を提案した。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="608"><a name="608"><TD id="E608" onclick="javascript:toggleLayer('J608')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> He wanted a challenge that not even the proponent knew how to solve, without either doing a massive search of the key-space, or somehow cryptanalyzing the structure of DES. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J608" onclick="javascript:toggleLayer('E608')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> かれが考えていたのは、提案者ですら解決方法を知らず、鍵空間を大量に探索したり、DESの構造を暗号解析しないでもいいような問題だった。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="609"><a name="609"><TD id="E609" onclick="javascript:toggleLayer('J609')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> His challenge is merely to find a key such that a ciphertext block of the form XXXXXXXX decrypts to a plaintext block of the form YYYYYYYY, 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J609" onclick="javascript:toggleLayer('E609')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> かれの問題というのは、 XXXXXXXX という形式の鍵が復号されるとYYYYYYYYのようなかたちになる鍵をみつける、というだけのものだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="610"><a name="610"><TD id="E610" onclick="javascript:toggleLayer('J610')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> where X and Y are any fixed 8-bit value that is repeated across each of the eight bytes of the block. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J610" onclick="javascript:toggleLayer('E610')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このとき、XとYはそれぞれ任意の固定8ビット値で、それがブロックの8バイトすべてで繰り返されているわけだ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="611"><a name="611"><TD id="E611" onclick="javascript:toggleLayer('J611')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> We added a small amount of hardware to the search units to help with solving this challenge.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J611" onclick="javascript:toggleLayer('E611')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索ユニットにちょっとハードを追加して、この問題の解決も手伝うことにした。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="612"><a name="612"><TD id="E612" onclick="javascript:toggleLayer('J612')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> There is an option to exclusive-OR the right half of the plaintext into the left half, before looking to see if the plaintext is "interesting".
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J612" onclick="javascript:toggleLayer('E612')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ユニットには、復号した平文がおもしろいかどうかを調べる前に、平文の右半分を左半分にXORするオプションがつけてある。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="613"><a name="613"><TD id="E613" onclick="javascript:toggleLayer('J613')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> For plaintexts of the form YYYYYYYY, this will result in a left half of all zeros.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J613" onclick="javascript:toggleLayer('E613')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> YYYYYYYYという形式の平文では、これは平文の左半分がすべてゼロになるということだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="614"><a name="614"><TD id="E614" onclick="javascript:toggleLayer('J614')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> We can then set up the plaintext recognizer so it only looks at the left half, and only thinks zeroes are interesting.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J614" onclick="javascript:toggleLayer('E614')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> こうすれば平文認識を設定するときに、左半分だけを見て、おもしろいのはゼロだけ、ということにしておく。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="615"><a name="615"><TD id="E615" onclick="javascript:toggleLayer('J615')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> This will produce a large number of false positives (any plaintext where the left and right halves are equal, like ABCDABCD), but software can screen them out with only about a 1% performance loss.  
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J615" onclick="javascript:toggleLayer('E615')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これは大量の「もっともらしい」結果を作り出す（右半分と左半分が同じになっている平文、たとえばABCDABCDなどはすべてあてはまる）ことになるけれど、でもそれは、パフォーマンスを1%くらい下げるだけで、ソフトによってスクリーニングできる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="616"><a name="616"><TD ID="TAB616" onclick="javascript:toggleLayer('J616')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB616" onclick="javascript:toggleLayer('E616')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="617"><a name="617"><TD id="E617" onclick="javascript:toggleLayer('J617')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Structure Of The Machine 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J617" onclick="javascript:toggleLayer('E617')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> マシンの構成 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="618"><a name="618"><TD id="E618" onclick="javascript:toggleLayer('J618')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Now that you know how a single search unit works, let's put them together into the whole machine. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J618" onclick="javascript:toggleLayer('E618')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これで探索ユニット一つの仕組みはわかってもらえたので、これを組み立ててマシン全体を作ってみよう。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="619"><a name="619"><TD id="E619" onclick="javascript:toggleLayer('J619')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Each search unit fits inside a custom chip.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J619" onclick="javascript:toggleLayer('E619')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各探索ユニットは、カスタムチップの中におさまっている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="620"><a name="620"><TD id="E620" onclick="javascript:toggleLayer('J620')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> In fact, 24 search units fit inside a single chip.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J620" onclick="javascript:toggleLayer('E620')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チップ一つには、探索ユニットが24個入っている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="621"><a name="621"><TD id="E621" onclick="javascript:toggleLayer('J621')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> All the search units inside a chip share the same ciphertext blocks. initialization vector, and the same plaintext-recognizer table of "interesting" result values.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J621" onclick="javascript:toggleLayer('E621')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 一つのチップ内部の探索ユニットは、すべて同じ暗号文ブロックと、初期化ベクトルと、同じ「おもしろい」結果値の表を共有している。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="622"><a name="622"><TD id="E622" onclick="javascript:toggleLayer('J622')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Each search unit has its own key, and each can be stopped and started independently. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J622" onclick="javascript:toggleLayer('E622')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各検索ユニットは独立した鍵をもって、独立にとめたり走らせたりできる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="623"><a name="623"><TD id="E623" onclick="javascript:toggleLayer('J623')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The chip provides a simple interface on its wires.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J623" onclick="javascript:toggleLayer('E623')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チップのピンは簡単なインターフェースだけを提供する。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="624"><a name="624"><TD id="E624" onclick="javascript:toggleLayer('J624')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> There are a few signals that say whether any of the search units are stopped, some address and data wires so that the software can read and write to the search units, and wires for electrical power and grounding. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J624" onclick="javascript:toggleLayer('E624')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索ユニットのどれかが止まったかを告げる信号がいくつか、ソフトが探索ユニットに読み書きできるような、アドレスとデータ用のピンがいくつか、そして電源と設置用のピンがある。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="625"><a name="625"><TD id="E625" onclick="javascript:toggleLayer('J625')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 1-14 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J625" onclick="javascript:toggleLayer('E625')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 1-14 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="626"><a name="626"><TD id="E626" onclick="javascript:toggleLayer('J626')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Since each search unit tries 2.5 million keys per second, a chip with 24 search units will try 60 million keys per second.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J626" onclick="javascript:toggleLayer('E626')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各探索ユニットは毎秒250万鍵を探索するので、24の探索ユニットを持ったチップは毎秒6000万鍵をためせる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="627"><a name="627"><TD id="E627" onclick="javascript:toggleLayer('J627')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> But there are a lot of keys to look at.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J627" onclick="javascript:toggleLayer('E627')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> でも、相手にしている鍵もたくさんある。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="628"><a name="628"><TD id="E628" onclick="javascript:toggleLayer('J628')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> For a single chip, it would take 6,950 days (about 19 years) to find the average key,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J628" onclick="javascript:toggleLayer('E628')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チップ一個なら、平均で鍵を見つけるのに6,950日かかる（約19年だ）。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="629"><a name="629"><TD id="E629" onclick="javascript:toggleLayer('J629')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> or 38 years to search the entire key space.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J629" onclick="javascript:toggleLayer('E629')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 鍵空間全体を探すには38年かかる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="630"><a name="630"><TD id="E630" onclick="javascript:toggleLayer('J630')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Since we don't want to wait that long, we use more than one chip. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J630" onclick="javascript:toggleLayer('E630')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> そんなに待つのはいやだったから、チップはもっとたくさん使うことにした。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="631"><a name="631"><TD id="E631" onclick="javascript:toggleLayer('J631')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Each chip is mounted onto a large circuit board that contains 64 chips,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J631" onclick="javascript:toggleLayer('E631')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各チップは、大きな回路基板にマウントされている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="632"><a name="632"><TD id="E632" onclick="javascript:toggleLayer('J632')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> along with a small bit of interface circuitry.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J632" onclick="javascript:toggleLayer('E632')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板一枚に64チップがのり、さらにインターフェース用の回路も少々のっている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="633"><a name="633"><TD id="E633" onclick="javascript:toggleLayer('J633')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The board blinks a light whenever the software is talking to that board.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J633" onclick="javascript:toggleLayer('E633')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板は、ソフトがその基板とやりとりしているときにはLEDが光るようになっている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="634"><a name="634"><TD id="E634" onclick="javascript:toggleLayer('J634')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 64 other lights show when some search unit in each chip has stopped.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J634" onclick="javascript:toggleLayer('E634')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ほかにランプが64個あって、各チップの探索ユニットが止まったときには光ってわかるようになっている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="635"><a name="635"><TD id="E635" onclick="javascript:toggleLayer('J635')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> In normal operation the software will talk to the board every few seconds, to check up on the chips.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J635" onclick="javascript:toggleLayer('E635')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ふつうの使用だと、ソフトは数秒ごとに基板とやりとりをして、チップを調べてまわる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="636"><a name="636"><TD id="E636" onclick="javascript:toggleLayer('J636')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The chips should only stop every once in a while, and should be quickly restarted by the software. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J636" onclick="javascript:toggleLayer('E636')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チップはほんのたまにしか止まらず、さらにすぐにソフトで再起動がかけられなくてはならない。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="637"><a name="637"><TD id="E637" onclick="javascript:toggleLayer('J637')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The boards are designed to the mechanical specifications of "9U" VMEbus boards (about 15" by 15").
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J637" onclick="javascript:toggleLayer('E637')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板は、「9U」VMEバスの基板の仕様にあわせて設計されている（約38センチx38センチ）。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="638"><a name="638"><TD id="E638" onclick="javascript:toggleLayer('J638')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> VMEbus is an industrial standard for computer boards, which was popular in the 1980s.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J638" onclick="javascript:toggleLayer('E638')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> VMEバスはコンピュータ基板用の工業規格で、1980年代にはよく使われた。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="639"><a name="639"><TD id="E639" onclick="javascript:toggleLayer('J639')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> We used the VMEbus form factor because it was easy to buy equipment that such boards plug into;
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J639" onclick="javascript:toggleLayer('E639')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> VMEバスのサイズを使ったのは、そういう基板を差し込める装置が簡単に手に入るからだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="640"><a name="640"><TD id="E640" onclick="javascript:toggleLayer('J640')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> we don't actually use the VMEbus electrical specifications. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J640" onclick="javascript:toggleLayer('E640')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> VMEバス自体の電気仕様は使っていない。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="641"><a name="641"><TD id="E641" onclick="javascript:toggleLayer('J641')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 9U VMEbus boards are much larger than the average interface card that plugs into a generic PC, so a lot more chips can be put onto them.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J641" onclick="javascript:toggleLayer('E641')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 9U VMEバス基板は、汎用PCにささるふつうのインターフェースカードよりずっと大きいので、一枚にのるチップの数もずっと多くなる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="642"><a name="642"><TD id="E642" onclick="javascript:toggleLayer('J642')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Also, 9U VMEbus boards are designed to supply a lot of power, and our DES Cracker chips need it. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J642" onclick="javascript:toggleLayer('E642')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> さらに9U VMEバス基板は大量の電源が供給できる設計になっていて、DESクラッカーチップにはこれが必要だ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="643"><a name="643"><TD id="E643" onclick="javascript:toggleLayer('J643')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Since each chip searches 60 million keys per second, a board containing 64 chips will search 3.8 billion keys per second.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J643" onclick="javascript:toggleLayer('E643')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各チップは毎秒6000万鍵を探索するので、チップ64個のった基板は、毎秒38億鍵を探索してくれる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="644"><a name="644"><TD id="E644" onclick="javascript:toggleLayer('J644')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Searching half the key space would take the board about 109 days.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J644" onclick="javascript:toggleLayer('E644')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 鍵空間を半分探索しつくすには、この基板一枚で109日かかる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="645"><a name="645"><TD id="E645" onclick="javascript:toggleLayer('J645')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Since we don't want to wait that long either, we use more than one board. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J645" onclick="javascript:toggleLayer('E645')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これでもまだ、そんなには待ちたくなかったから、基板ももっとたくさん使うことにした。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="646"><a name="646"><TD id="E646" onclick="javascript:toggleLayer('J646')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The boards are mounted into chassis, also called "card cages".
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J646" onclick="javascript:toggleLayer('E646')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板はラック、またの名を「カードケージ」にさした。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="647"><a name="647"><TD id="E647" onclick="javascript:toggleLayer('J647')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> In the current design, these chassis are recycled Sun workstation packages from about 1990. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J647" onclick="javascript:toggleLayer('E647')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 現在の設計では、このラックは1990年頃のSunワークステーションパッケージをリサイクルしたものを使っている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="648"><a name="648"><TD id="E648" onclick="javascript:toggleLayer('J648')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Sun Microsystems built a large number of systems that used the large 9U VMEbus boards, and provide excellent power and cooling for the boards.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J648" onclick="javascript:toggleLayer('E648')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Sun Microsystemsは、大型の9U VMEバス基板を使うシステムをたくさんつくっており、こういうシステムは基板の電源と冷却の点でもきわめて優れている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="649"><a name="649"><TD id="E649" onclick="javascript:toggleLayer('J649')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The Sun-4/470 chassis provides twelve slots for VMEbus boards, and can easily be modified to handle our requirements.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J649" onclick="javascript:toggleLayer('E649')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Sun-4/470 のシャーシはVMEバス基板のスロットを12個分持っていて、こちらの要件にあうようにすぐに改造できた。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="650"><a name="650"><TD id="E650" onclick="javascript:toggleLayer('J650')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Subsequent models may use other physical packaging. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J650" onclick="javascript:toggleLayer('E650')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 今後のモデルは、物理的なパッケージはちがったものになるだろう。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="651"><a name="651"><TD id="E651" onclick="javascript:toggleLayer('J651')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Each chassis has a connector for a pair of "ribbon cables" to connect it to the next chassis and to the generic PC that runs the software.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J651" onclick="javascript:toggleLayer('E651')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各ラックにはコネクタがついていて、そこにはリボンケーブルが2本ついて、となりのラックや、ソフトを動かす汎用PCと接続するようになっている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="652"><a name="652"><TD id="E652" onclick="javascript:toggleLayer('J652')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The last chassis will contain a "terminator", rather than a connection to the next chassis,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J652" onclick="javascript:toggleLayer('E652')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 最後のラックは、次のラックがないので、「ターミネータ」（末端抵抗）がついている。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="653"><a name="653"><TD id="E653" onclick="javascript:toggleLayer('J653')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> to keep the signals on the ribbon cable from getting distorted when they reach the end of the line. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J653" onclick="javascript:toggleLayer('E653')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 信号がリボンケーブルの終端にきたとき、そこではねかえって信号をゆがませないようにするために、そういう抵抗をつけておくわけだ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="654"><a name="654"><TD id="E654" onclick="javascript:toggleLayer('J654')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Since each board searches 3.8 billion keys per second, a chassis containing 12 boards will search 46 billion keys per second.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J654" onclick="javascript:toggleLayer('E654')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 各基板は一秒で38億鍵を探索するので、基板12枚をさしたラックは、毎秒460億鍵を探索することになる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="655"><a name="655"><TD id="E655" onclick="javascript:toggleLayer('J655')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> At that rate, searching half the key space takes about 9 days.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J655" onclick="javascript:toggleLayer('E655')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このスピードだと、鍵空間の半分を探索しつくすのには9日くらいかかることになる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="656"><a name="656"><TD id="E656" onclick="javascript:toggleLayer('J656')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> One chassis full of boards is about 25% faster than the entire worldwide network of machines that solved the RSA "DES-II" challenge in February 1998,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J656" onclick="javascript:toggleLayer('E656')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このラック一つに基板をいっぱいにさせば、1998年2月にRSAの「DES-II」チャレンジを解決した全世界のコンピュータを上回る速度となる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="657"><a name="657"><TD id="E657" onclick="javascript:toggleLayer('J657')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> which was testing about 34 billion keys per second at its peak. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J657" onclick="javascript:toggleLayer('E657')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このコンテストに参加した全世界のコンピュータ群は、ピーク時に秒速340億鍵をためしていた。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="658"><a name="658"><TD ID="TAB658" onclick="javascript:toggleLayer('J658')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB658" onclick="javascript:toggleLayer('E658')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="659"><a name="659"><TD id="E659" onclick="javascript:toggleLayer('J659')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 1-15 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J659" onclick="javascript:toggleLayer('E659')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 1-15 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="660"><a name="660"><TD id="E660" onclick="javascript:toggleLayer('J660')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Since an informal design goal for our initial DES Cracker was to crack an average DES key in less than a week, we need more than 12 boards.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J660" onclick="javascript:toggleLayer('E660')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 最初のDESクラッカーの非公式な目標としては、平均的なDES鍵を1週間以下でクラックすることだったので、基板は12枚以上必要ということになる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="661"><a name="661"><TD id="E661" onclick="javascript:toggleLayer('J661')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> To give ourselves a comfortable margin, we are using 24 boards, which we can fit into two chassis.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J661" onclick="javascript:toggleLayer('E661')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> じゅうぶんに余裕をみて、基板を24枚使って、それをラック2つにおさめた。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="662"><a name="662"><TD id="E662" onclick="javascript:toggleLayer('J662')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> They will search 92 billion keys per second, covering half the key space in about 4.5 days.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J662" onclick="javascript:toggleLayer('E662')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これで毎秒920億の鍵を探索してくれるので、鍵空間の半分を4.5日でカバーする。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="663"><a name="663"><TD id="E663" onclick="javascript:toggleLayer('J663')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> If the chips consume too much power or produce too much heat for two chassis to handle,* we can spread the 24 boards across three chassis. a
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J663" onclick="javascript:toggleLayer('E663')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チップがラック一つに入れるには消費電力が大きすぎたり、発熱が大きすぎたりしたら*、基板24枚をラック3つにわければいい。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="664"><a name="664"><TD id="E664" onclick="javascript:toggleLayer('J664')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Table 1-1: Summary of DES Cracker performance
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J664" onclick="javascript:toggleLayer('E664')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> Table 1-1: DES クラッカー性能のまとめ
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="665"><a name="665"><TD id="E665" onclick="javascript:toggleLayer('J665')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> DeviceHow Many In Next DeviceKeys/SecDays/avg search
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J665" onclick="javascript:toggleLayer('E665')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> デバイスその下のデバイスあたりの数鍵/秒探索あたり平均所要日数
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="666"><a name="666"><TD id="E666" onclick="javascript:toggleLayer('J666')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Search Unit242,500,000166,800
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J666" onclick="javascript:toggleLayer('E666')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 探索ユニット242,500,000166,800 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="667"><a name="667"><TD id="E667" onclick="javascript:toggleLayer('J667')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Chip6460,000,0006,950
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J667" onclick="javascript:toggleLayer('E667')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チップ6460,000,0006,950 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="668"><a name="668"><TD id="E668" onclick="javascript:toggleLayer('J668')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Board123,840,000,000109
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J668" onclick="javascript:toggleLayer('E668')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 基板123,840,000,000109 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="669"><a name="669"><TD id="E669" onclick="javascript:toggleLayer('J669')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Chassis246,080,000,0009.05
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J669" onclick="javascript:toggleLayer('E669')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ラック246,080,000,0009.05 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="670"><a name="670"><TD id="E670" onclick="javascript:toggleLayer('J670')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> EFF DES Cracker92,160,000,0004.524
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J670" onclick="javascript:toggleLayer('E670')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> EFF DES クラッカー92,160,000,0004.524
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="671"><a name="671"><TD id="E671" onclick="javascript:toggleLayer('J671')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> We designed the search unit once.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J671" onclick="javascript:toggleLayer('E671')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> まず、探索ユニットを一回設計した。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="672"><a name="672"><TD id="E672" onclick="javascript:toggleLayer('J672')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Then we got a speedup factor of more than 36,000 to 1 just by replicating it 24 times in each chip and making 1500 chips.a
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J672" onclick="javascript:toggleLayer('E672')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> そしてそれを各チップごとに24回コピーして、さらにはそのチップを1,500個作っただけで、処理能力は36,000倍になった。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="673"><a name="673"><TD id="E673" onclick="javascript:toggleLayer('J673')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> This is what we meant by "highly parallelizable" 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J673" onclick="javascript:toggleLayer('E673')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> これが「高度に並列処理可能（highly parallelizable)」ということだ。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="674"><a name="674"><TD ID="TAB674" onclick="javascript:toggleLayer('J674')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB674" onclick="javascript:toggleLayer('E674')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="675"><a name="675"><TD id="E675" onclick="javascript:toggleLayer('J675')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Budget 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J675" onclick="javascript:toggleLayer('E675')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 予算 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="676"><a name="676"><TD id="E676" onclick="javascript:toggleLayer('J676')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The whole project was budgeted at about US$210,000.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J676" onclick="javascript:toggleLayer('E676')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> プロジェクト全体で予算は21万ドルほどだった。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="677"><a name="677"><TD id="E677" onclick="javascript:toggleLayer('J677')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Of this, $80,000 is for the labor of designing, integrating, and testing the DES Cracker.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J677" onclick="javascript:toggleLayer('E677')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> このうち8万ドルはDESクラッカーの設計、組み立て、テストにかかった労働コストである。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="678"><a name="678"><TD id="E678" onclick="javascript:toggleLayer('J678')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The other $130,000 is for materials, including chips, boards, all other components on the boards, card cages, power supplies, cooling, and a PC. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J678" onclick="javascript:toggleLayer('E678')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 残り13万はチップ、基板、その他基板のコンポーネント、基板のラック、電源、冷却装置、そしてPCなどの直接コストである。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="679"><a name="679"><TD id="E679" onclick="javascript:toggleLayer('J679')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The software for controlling the DES Cracker was written separately, as a volunteer project.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J679" onclick="javascript:toggleLayer('E679')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> DESクラッカーの制御用ソフトは別個にボランティアプロジェクトとしてかかれた。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="680"><a name="680"><TD id="E680" onclick="javascript:toggleLayer('J680')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> It took two or three weeks of work. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J680" onclick="javascript:toggleLayer('E680')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 作業としては二三週間ほどかかっている。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="681"><a name="681"><TD id="E681" onclick="javascript:toggleLayer('J681')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The entire project was completed within about eighteen months.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J681" onclick="javascript:toggleLayer('E681')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> プロジェクト全体は、全部で18ヶ月ほどで完成した。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="682"><a name="682"><TD id="E682" onclick="javascript:toggleLayer('J682')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Much of that time was used for preliminary research, before deciding to use a custom chip rather than FPGA's.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J682" onclick="javascript:toggleLayer('E682')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> その時間の大半は、初期のリサーチに費やされたもので、カスタムチップではなくFPGAを使おうとしていた時間が多い。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="683"><a name="683"><TD id="E683" onclick="javascript:toggleLayer('J683')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The contract to build custom chips was signed in September, 1997,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J683" onclick="javascript:toggleLayer('E683')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> カスタムチップをつくるための契約は1997年8月にかわされた。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="684"><a name="684"><TD id="E684" onclick="javascript:toggleLayer('J684')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> about eight months into the project.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J684" onclick="javascript:toggleLayer('E684')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> プロジェクトがはじまって8ヶ月くらいたってからだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="685"><a name="685"><TD id="E685" onclick="javascript:toggleLayer('J685')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The team contained less than ten people, none of whom worked full-time on the project.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J685" onclick="javascript:toggleLayer('E685')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チームは全部で10人以下、しかもフルタイムでこのプロジェクトに取り組んだ者は一人もいない。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="686"><a name="686"><TD id="E686" onclick="javascript:toggleLayer('J686')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> They include a project manager, software designer, programmer, chip designer, board designer, hardware technicians, and hardware managers. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J686" onclick="javascript:toggleLayer('E686')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> チームメンバーは、プロジェクトマネージャ、ソフトデザイナー、プログラマ、チップ設計者、基板設計者、ハード技術者、ハードマネージャから構成される。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="687"><a name="687"><TD id="E687" onclick="javascript:toggleLayer('J687')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> _________________ 
* 
* At publication time, we have tested individual chips but have yet not built the full machine
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J687" onclick="javascript:toggleLayer('E687')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 刊行時点では、ここのチップはテストが終わっていたけれど、マシン全体はまだ作り終えていなかった。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="688"><a name="688"><TD id="E688" onclick="javascript:toggleLayer('J688')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> If the chips' power consumption or heat production is excessive in a machine containing 1500 chips, we also have the option to reduce the chips' clock rate from 40 MHz down to, say, 30 MHz.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J688" onclick="javascript:toggleLayer('E688')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> もしチップの消費電力か発熱が大きすぎて、チップ1500個を使ったマシンが無理なら、チップのクロックを40 MHz から、たとえば 30 MHz まで下げるという手もある。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="689"><a name="689"><TD id="E689" onclick="javascript:toggleLayer('J689')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> This would significantly reduce the power and heat problems,
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J689" onclick="javascript:toggleLayer('E689')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> こうすれば熱と消費電力の問題は相当へる。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="690"><a name="690"><TD id="E690" onclick="javascript:toggleLayer('J690')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> at a cost of 33% more time per search 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J690" onclick="javascript:toggleLayer('E690')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ただしこの場合、探索時間は33%よけいにかかることになる
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="691"><a name="691"><TD id="E691" onclick="javascript:toggleLayer('J691')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> (6 days on average). 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J691" onclick="javascript:toggleLayer('E691')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> （つまり平均で6日よけいにかかることになる）。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<TR id="692"><a name="692"><TD ID="TAB692" onclick="javascript:toggleLayer('J692')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD ID="TAB692" onclick="javascript:toggleLayer('E692')" BGCOLOR=#F0F0F0 style="visibility : visible"> <BR> </TD></a></TR>
<!-- TRANS_PAIR BEGIN --><TR id="693"><a name="693"><TD id="E693" onclick="javascript:toggleLayer('J693')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> 1-16 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J693" onclick="javascript:toggleLayer('E693')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 1-16 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="694"><a name="694"><TD id="E694" onclick="javascript:toggleLayer('J694')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> We could have reduced the per-chip cost, or increased the chip density or search speed, had we been willing to spend more money on design.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J694" onclick="javascript:toggleLayer('E694')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> もし設計にもっとお金をかける気があれば、チップあたりのコストを下げたり、チップ密度を上げたり、探索速度を向上させることもできたはずだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="695"><a name="695"><TD id="E695" onclick="javascript:toggleLayer('J695')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> A more complex design could also have been flexible enough to crack other encryption algorithms. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J695" onclick="javascript:toggleLayer('E695')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> もっと複雑な設計にすれば、ほかの暗号アルゴリズムをクラックできるだけの柔軟性ももてただろう。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="696"><a name="696"><TD id="E696" onclick="javascript:toggleLayer('J696')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The real point is that for a budget that any government, most companies, and tens of thousands of individuals could afford, we built a usable DES Cracking machine.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J696" onclick="javascript:toggleLayer('E696')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ここでほんとうに大事な点というのは、どんな政府でも、ほとんどの企業でも、そして何万人もの個人ですら手が届くような予算で、使い物になるDESクラック用マシンがつくれた、ということだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="697"><a name="697"><TD id="E697" onclick="javascript:toggleLayer('J697')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> The publication of our design will probably in itself reduce the design cost of future machines, and the advance of semiconductor technology also makes this cost likely to drop.
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J697" onclick="javascript:toggleLayer('E697')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> この設計を公開したことで、将来のマシンの設計コストはもっと下がるだろうし、半導体技術の進歩も、コスト低下に貢献するはずだ。
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="698"><a name="698"><TD id="E698" onclick="javascript:toggleLayer('J698')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> In five years some teenager may well build her own DES Cracker as a high school science fair project. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J698" onclick="javascript:toggleLayer('E698')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> 5年もすれば、10代の子でも、高校の科学博覧会で自前のDESクラッカーがつくれるようになることは、じゅうぶんに考えられる。 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="699"><a name="699"><TD id="E699" onclick="javascript:toggleLayer('J699')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> Who Else Is Cracking DES? 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J699" onclick="javascript:toggleLayer('E699')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> ほかにはだれがDESをクラックしているだろう? 
 </TD></a></TR><!-- TRANS_PAIR END -->
<!-- TRANS_PAIR BEGIN --><TR id="700"><a name="700"><TD id="E700" onclick="javascript:toggleLayer('J700')" BGCOLOR=#F0F0F0 style="visibility : visible" width=50% VALIGN=TOP> If a civil liberties group can build a DES Cracker for $200,000, it's pretty likely that governments can do the same thing for under a million dollars. 
 </TD><TD VALIGN=TOP BGCOLOR=#FFFFFF><BR></TD><TD id="J700" onclick="javascript:toggleLayer('E700')" VALIGN=TOP BGCOLOR=#F0F0F0 style="visibility : visible"> もし市民自由団体がDESクラッカーを20万ドルでつくれるなら、おそらく政府機関でも100万ドル以下で同じものをつくれるはずだ
 </TD></a></TR><!-- TRANS_PAIR END -->
</TABLE></span><HR>
<a href="des-5.htm">prev</a>
<a href="des-0.htm">0</a>
<a href="des-1.htm">1</a>
<a href="des-2.htm">2</a>
<a href="des-3.htm">3</a>
<a href="des-4.htm">4</a>
<a href="des-5.htm">5</a>
<6>
<a href="des-7.htm">7</a>
<a href="des-8.htm">8</a>
<a href="des-9.htm">9</a>
<a href="des-10.htm">10</a>
<a href="des-11.htm">11</a>
<a href="des-12.htm">12</a>
<a href="des-13.htm">13</a>
<a href="des-14.htm">14</a>
<a href="des-15.htm">15</a>
<a href="des-16.htm">16</a>
<a href="des-17.htm">17</a>
<a href="des-18.htm">18</a>
<a href="des-19.htm">19</a>
<a href="des-20.htm">20</a>
<a href="des-7.htm">next</a>
<hr>

<h2><a name="preamble">このページにある対訳文について</a></h2>このページの対訳文は，再配布可能な作品（<a href="http://www.gutenberg.org/">Project Gutenberg</a> や<a href="http://www.aozora.gr.jp/">青空文庫</a>や<a href="http://www.genpaku.org/">プロジェクト杉田玄白</a>などの作品）について，日本語文と英語文とを対応付けたものの一つです．その他の対訳作品やダウンロードや著作権などについては，<a href="../index.html">日英対訳文対応付けデータのホームページ</a>を見て下さい．また，オリジナルの日英作品の著作権についてはオリジナルの日本語文および英語文の著作権を見て下さい．なお，著作権上の問題がある作品については，情報通信研究機構自然言語グループ内山将夫（ｍｕｔｉｙａｍａ あっとまーく ｎｉｃｔ どっと ｇｏ どっと ｊｐ）まで連絡していただければ，それらについては削除します．<h3>関連ページ</h3><ul><li>オリジナルの英語文: <a href="../org/dese.txt">local copy</a> / <a href="http://cryptome.org/cracking-des.htm">http://cryptome.org/cracking-des.htm</a><li>オリジナルの日本語文: <a href="../org/desj.txt">local copy</a> / <a href="http://www.genpaku.org/crackdes/cracking-desj.html">http://www.genpaku.org/crackdes/cracking-desj.html</a><li><a href="../manual-alignment/des.alm">対訳データ</a></ul><p>
<script type="text/javascript">
<!--
document.F.CE.checked = false
document.F.CJ.checked = false
// -->
</script>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
</BODY></HTML>

