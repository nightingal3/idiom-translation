ひと，場所，もの，そして，アイデア 
People, places, things and ideas

by Kragen Sitaker <kragen@pobox.com> 

ソフトウエア 
Software

過去と現在 
The past and the present

閉じ込められたソフトウエア: その未来 
Software locked up: the future?

アプリケーションが好きではない理由 
Why I don't like this

特殊用途のながれにどう立ち向かうか 
How to fight it


■ ソフトウエア 
Software

ソフトウエアとはアイデアである。
Software is ideas.

情報である。
Information.

ソフトウエアはひとや場所，ものとも異なる。
It's different from people, places, and things;

なぜなら，ソフトウエアは際限なくまるで火のように増えていく。
it's infinitely reduplicable like fire, 

それも，大半の場合，コストなしに。
at almost no cost.

こんなことは自明のことであるし，口に出して言うには陳腐でさえある。
This is a truism, even a cliche.

けれども，ソフトウエアにはまだよく吟味されていない重要な特性があるように思えるのだ。 
But it seems that there are particular consequences that aren't well-explored.

労働力や場所，ものを販売するようには，ソフトウエアは販売できない。 
One is that it doesn't work well to sell it the way you sell slaves, places, and things;

顧客の誰であっても，原価でいくらでもソフトウエアを複製できるからだ。
any of your customers can make an unbounded number of copies at cost,

あるいは原価より安価で複製することもできる。
 or less. 

しかし，現在の市場ではソフトウエアの販売が実行可能なビジネスモデルになっている。
Market friction currently makes selling software a viable business model.

あるいは，ブランド名が商売を可能にしているのかも知れない。
Perhaps branding does, too;

Red Hat 社が CD を 50 ドルで販売できるのは，皆が Red Hat のブランドを好きだからか，それとも，２ドルで CheapBytes から同じ CD を購入できることを知らないかの一体どちらなのであろう。
there's a question as to whether Red Hat sells CDs for $50 because people like Red Hat's brand, or just because they don't know they can buy essentially the same CD from CheapBytes for $2.

 
■ 過去と現在 
The past and the present

複製を阻止する伝統的な方法は，アイデアをひとや場所，もののなかに閉じ込めるという方法である。
The traditional way to deal with this is to lock ideas up inside people, places, and things.

法律家はお決まりの手続きを踏むだけで (聞くところによると遺言の大半がこの例に当たるらしいが)，あるいは適当なアイデアを述べ，実際には何の創造的な仕事をせずに賃金を手にしている。 
A lawyer can get quite a bit of money simply for spitting out the appropriate ideas, not doing any actual creative work, or simply for applying rote procedures -- most wills reportedly fall in this category. 

ジョージア・オキーフ (1887-1986) の絵画を見たくなったら，私たちはジョージア・オキーフ美術館に出かけないとならない。
I have to go to the Georgia O'Keeffe Museum to see old Georgia's paintings,

なぜなら，この美術館では写真撮影を禁じているからだ [訳注 1]。
because they don't allow photography.

だからこの美術館は私たちに入場料を請求することができるのだ 
Then they can charge me admission.

(この美術館はとても広い。
(Great museum, by the way.

ところで，仮にこの美術館に行ったとしても，４日分の入場券は必要ない。
If you go there, don't get the four-day pass;

なぜなら，コレクションの数はむしろ少ないくらいだからだ)。
their collection is rather small.)

書籍は印刷費用よりも高い値で販売される。
A book can be sold for more than the cost of printing it

なぜなら，書籍という物理的側面とアイデアとを切り離すことは難しいからだ。 
because the ideas are difficult to separate from their physical manifestation.

ソフトウエアはアイデアをひとや場所やものから分けるのを容易にした。
Software makes it much easier to separate ideas from people, places, and things.

メールを使いたくてコンピュータを購入したけれども，フラクタルも描きたくなったとしよう。
If I buy my computer to send email with, and I want to make fractals,

この場合，フラクタルを描くために新しいコンピュータを買う必要はない。
I don't have to buy a new fractal machine.

単にフラクタルを描くためのソフトウエアをダウンロードするばよい。
I just have to download some fractal software. 

また，もしも，ある建築物の降伏力を算出したい場合でも，建築の技術者を雇う必要はない。
If I want to calculate the yield force of a strut, I don't have to hire a structural engineer;

ただ，FEA ソフトウエアをダウンロードし，建築物がもちこたえられないまで力を加えるようシュミレートすればよい。
I can download some FEA software and simulate stressing it until it yields.

ジョージア・オキーフの絵画を見るために美術館に出かける必要はない。
I don't have to go to a museum to look at my neighbor's fractals;

コンピュータの画面でフラクタルを描きさえすればよい [訳注 2]
I can just pull them up on my screen. 

(もちろん，私は一度はそれらのソフトウエアをダウンロードしている)。 
(Once I download them, of course.)

なんという発展であろうか。 
This is a spectacular change.


■ 閉じ込められたソフトウエア: その未来 
Software locked up: the future?

最近までは，もののなかにソフトウエアを閉じ込めてしまうのは，通常，コンピュータのアプリケーションがもつ性質であった。
And it was the nature of computer applications, in general, until recently.

しかし，現在ではウエッブがある。
But now we have the Web,

そして，ひとびとは特殊用途のアプリケーションを埋め込んだコンピュータについて多くを語りあうようになった。
and people are talking a lot about application-specific embedded computers.

以前アイデアをコンピュータソフトウエアという形で受渡ししていたように，現在では，突然，アプリケーションという形でアイデアを受渡しできるようになった。
Suddenly people can deliver applications like the ones they used to deliver as computer software,

しかし，アプリケーションはソフトウエアを，つまり，アイデアを場所やもののなかに閉じ込めてしまう。 
but they can lock up the software -- the ideas -- inside places and things.

例えば，全国の電話番号のリストが入った CD-ROM を持っているとする。
As an example, I have a CD-ROM containing aggregated US phone listings.

十分な時間と知識があれば，番号のリストを取り出して，ウエッブサイトに置くことができる 
Given sufficient time and expertise, I can extract these phone listings and put them up on a web site.

(まずは番号を入れてあるデータベースの構造を明らかにする技術が必要だが)。 
(I need to reverse-engineer the database structure they're stored in first.)

特定の名字がある都市に偏って分布してないかどうか調べるために相関係数を算出できる 
I can run correlation tests to see if people with certain last names tend to have more biased exchange distributions within a city.

(偏りがある場合，その都市の人々は家族の近くで暮らしているか，民族的に隔離されているかどちらかであろう)。
(Which would indicate that they lived close to their families, perhaps, or that the city was ethnically segregated.) 

また，Cathy の一般的なつづりが Kathy であるのか Cathi であるかを知ることができる。
I can find out which spelling of Cathy is most popular (Kathy? Cathi?),

加えて，Cathy のつづりをどちらにするかが名字と関連があるかどうかを調べることもできる。 
and I can see if people's choices of spellings of Cathy are correlated with their last names.

電話番号のリストをもった別のウエッブサイトがある。
There are also several web sites containing the same set of phone listings, 

このサイトは私のサイトよりも新しい版であるかも知れない。
or newer versions. 

けれどもこのサイトでは上記で可能であったことがどれもできない。
I can't do any of these things with these web sites,

なぜなら，電話番号は，つまりアイデアはウエッブサイトのなかに閉じ込められてしまっているからだ。
because the phone listings -- an idea -- are locked up in the web site

ウエッブサイトをどう見るかによってウエッブサイトは場所だとも言えるしものとも言えるが，アイデアはウエッブサイトという場所あるいはもののなかに閉じ込められているのだ。
-- a place or a thing, depending on how you look at it.

別のやりかたは，もののなかに情報を閉じ込めるやりかただ。
Another tack is to lock information up in things.

NSA の Skipjack アルゴリズムは長い間機密事項であった。
The NSA's Skipjack algorithm was classified for several years;

それを実装した製品は広く出回ってはいたが，どれも特別に封印された装置の形でしか入手できなかった。
implementations were widely available, but only in special hardened devices.

この Skipjack によって機密扱いの諸研究を鉄のカーテンの内側に隠し続けることができていた。
This allowed them to deploy it widely behind the iron curtain that surrounds classified research,

けれども，このアルゴリズムに外界の光を当てようと試みる人々もいる。 
and they intended to deploy it widely in the outside world, too.

(今日まで私はその鉄のカーテンの外側にいる)。
(So far, I'm outside that curtain.)

最近，世の流れによって，NSA は Skipjack の実装を配布するようになり，NSA は Skipjack の機密事項から外した 
Recently, circumstances forced them to distribute software implementations of Skipjack, and so they declassified it.

(より詳しくは http://www.counterpane.com/crypto-gram-9807.html#skip を参照のこと)。 
(See http://www.counterpane.com/crypto-gram-9807.html#skip for more.)


■ アプリケーションが好きではない理由 
Why I don't like this

電話帳を自分のものにできれば，もっと自由に使うことができる。
Having the phone book myself gives me more freedom.

一方，電話帳をコンピュータにインストールしなければならないなら，その電話帳のソフトウエアが私のコンピュータをコントロールする程度が高くなる。
On the other hand, it also requires me to install software on my machine, giving that software some degree of control over my machine.

この場合，そのソフトウエアが Windows 95 でしか動作しない。
In this particular case, the software runs under Win95,

このため，この電話帳は私のコンピュータを完全にコントロールしようとする。
so it demands complete control over my machine.

だから，私にとっては，ウエッブサイトを訪れて電話番号を知るためにフォームに記入したほうがより便利であるのだ。 
So it's actually considerably more convenient for me to just visit the web page and fill out a form to look up someone's phone number.

もののなかの情報はソフトウエアのなかの情報よりも便利である。
Information in things is also considerably more convenient than information in software;

なぜなら，特殊用途に作られたものは大半の場合汎用コンピュータよりも扱い易いからである。
a special-purpose thing is often considerably easier to use for that purpose than a general-purpose computer is.

このため，工業界の専門家の多くは目的別の装置の利点のために汎用コンピュータは廃れてしまうであろうと予測していた。 
Because of this, many industry pundits have been forecasting that general-purpose computers will fall out of use in favor of special-purpose devices.

私はこの傾向を良く思っていない。
I'm somewhat worried about this trend.

汎用コンピュータは使いづらいことは明らかであるが，私は汎用コンピュータを使うのは好きだ。
I like using general-purpose computers -- though admittedly they are often difficult to use.

私はこの種のコンピュータが与えてくれる自由が好きだ。
I like the freedom it gives me.

汎用コンピュータはまさに私のこころの延長部分なのだ。 
The computer is just an extension of my mind.

ウエッブサイトや特殊用途のハードウエアはこの種のものではない。
Web sites and special-purpose hardware are not like this.

それらは汎用コンピュータが与えてくれる自由をもたらしてくれない。
They do not give me the same freedoms general-purpose computers d.o

仮に専門家たちが予測するようにこの傾向が続くとするならば，今自分のコンピュータで処理している仕事の多くが特殊用途の装置やリモートサーバーによって処理されることになろう。
If the trend were to continue to the extent the pundits project, more and more of what I do today with my computer will be done by special-purpose things and remote servers.

そんな事態になったとき，ソフトウエアの自由にどんな意味があるのか。
What does freedom of software mean in such an environment?

たしかに，ソフトウエアやデータベースをダウンロードせずに，ウエブサイトで処理できるのは悪くない 
Surely it's not wrong to run a Web site without offering my software and databases for download.

(仮にそのようなことが可能ならば，大半のひとにとってはソフトウエアをダウンロードするのは便利ではないかも知れない。
(Even if it were, it might not be feasible for most people to download them.

IBM の専売サーバーは多くの巨大なデータベースを持っている)。 
IBM's patent server has a many-terabyte database behind it.)

私はソフトウエア，特にオープンソース・ソフトウエアがひとびとに己の生活をコントロールする力を与えてくれると信じている。
I believe that software -- open-source software, in particular -- has the potential to give individuals significantly more control over their own lives,

なぜなら，ソフトウエアはひとや場所，ものから作られているのではなく，アイデアから作られているからだ。
because it consists of ideas, not people, places, or things. 

特殊用途の装置やリモートサーバーへの流れはこのソフトウエアに逆行するものである。 
The trend toward special-purpose devices and remote servers could reverse that.

フリーソフトウエアを ROM に焼くことにどういう意味があるのか。
What does it mean to have free software burned into a ROM?

仮にソースコードを見るために ROM を分解しなければならない場合，あるいは，あたらしいソフトウエアを使うために新しい ROM に焼かなければいけない場合，ソフトウエアはまだフリーであるのか。
Is the software still free if I have to desolder the ROM to read the source code and burn a new ROM to run a modified version? 

ウエッブサーバー上で間接的に接続できるアプリケーションを起動させるソフトウエアに何か意味があるのか。
What does it mean to have free software running a remotely-accessible application on a Web server?

ひいきめに見ても，このような技術はひとびとがパーソナルコンピュータで満喫している自由をもつことを難しくしているように見える。
Even with the best of intentions, these technologies seem make it difficult to give people the same kind of freedom they enjoy with PCs.


■ 特殊用途のながれにどう立ち向かうか 
How to fight it

新しい装置を購入するのは，ソフトウエアをダウンロードし自分のコンピュータにインストールするよりお金がかかる。
It's more expensive to buy a new device than it is to download software and install it on my machine.

だから，特殊用途の装置に優れた点がないならば，ひとびとはそれを使うことはない。 
So people won't use special-purpose devices if they provide no advantages.

けれども，特殊用途の装置は種々の利点を備えている。
But they do provide advantages.

それらの装置は現在の汎用コンピュータよりも使いやすい。
They're *much* easier to use than current general-purpose computers.

それぞれの機能にはそれぞれのボタンが対応している。
A button for every function;

同じボタンが別の処理をしたり，何も処理しないような変わった方式はない。
no funny modes in which the buttons do something else, or nothing.

様々に変化する状態はちくいち表示される。
A display for every state variable;

表示するために何かをクリックする必要はない。
you don't have to click on things to make them visible.

このような機能のないことが汎用コンピュータ特有の弱みであると私は思わない。
I suspect that this is not an inherent limitation of general-purpose computers,

けれども現時点ではひとつの弱みであると思う。 
but a limitation of their current state.

もう一つ大きな問題がある。
Another big issue is

それは，特殊用途の機器がとにかくもなんとか機能する一方で，
that they just work.

汎用コンピュータはまともに機能しないことが多いという問題だ。
General-purpose computers often don't, 

特に Microsoft 製 OS を使っている場合がそうである。 
particularly when running Microsoft OSes. 

最も運がいい場合でさえ，続けたかった作業，例えば手紙を書くなどという作業を再開する前に，全く関係のない作業をいくつかし終えなければならない。
Even in the best case, you still have to do a couple of seconds of irrelevant stuff before getting to work on what you want to work on -- typing a letter or whatever.

典型的な場合では，10 秒ほどそこらへんをクリックしなければならない。
More typically, you have to click around for ten seconds or so. 

最悪の場合には，Windows やアプリケーションを再インストールしなければならず，周辺装置の再設定やそれが動くようになる前に適切なドライバを再インストールしなければならない。
At worst, you have to reinstall Windows and the application, reconfigure some peripherals, and reinstall their drivers before you can get anything done.
 
３番目の問題点は汎用コンピュータにはソフトウエアのインストールが必要である点である。
A third big issue is that they require software installation.

もしも，メールのためにコンピュータを使い始めたのならば，最初にメールのソフトウエアをインストールしなければならない。
If I want to start using my machine for writing email different, I have to install email software on it. 

メールのためだけの機器を購入するよりはずっと安上がりであるけれど，インストールはそう苦痛を感じないものでもないし，高圧的でもあるし，面倒なものでもある。
While this is considerably less expensive than buying a special-purpose email machine, it's considerably less uncomfortable, intimidating, and confusing. 

それに，あるひとはこうも言う。
(Or so I'm told.)

インストールし終えるまでに時間がかかりすぎる。 
It also takes longer.

汎用コンピュータが小さくて安価な特殊用途の機器の猛襲をしのいで生き残るためには，特殊用途の機器のように，もっと使い易く，信頼性を高く，ソフトウエアのインストールを容易にする必要がある。
If general-purpose computers are to survive the onslaught of tiny, cheap special-purpose boxes, they must become as easy to use, reliable, and easy to install software on as those special-purpose boxes.

このためには現在皆が使っている OS とは全く異なった OS とそれを使う環境が必要となる。
そう。
This requires a totally different operating environment than anything we're using on the desktop today;

そんなに驚くべき結論ではないが，その環境とは GNU/Linux である。
GNU/Linux は私がこれまで試した環境のうちでもっとも求める環境に近い 
not surprisingly, GNU/Linux is closer than anything else I've used.

(Squeak [訳注 3] はもしかしたら GNU/Linux よりもいいかも知れない。
(Squeak might be even better,

けれども，私はまだ試したことがない)。 
 but I haven't tried it yet.) 

しかし，その GNU/Linux にしても，使い易さ，信頼性等を考える場合，特殊用途の機器の水準からはあまりにも遠くかけ離れている。
But GNU/Linux is an incredibly long way away.

特殊用途の機器並の使いやすさ，信頼性の水準に到達するには，いまとちがったソフトウエアだけでなく，いまとはちがうハードウエアも必要となろう。
This will require different hardware as well as different software.

リモートサーバーが秘める力にも同じことが言える。
The forces behind remote servers are similar

ウエッブブラウザを介することによって統一されたインターフェイス。
それがもたらす使い易さ。
-- ease of use because of uniform interfaces through a web browser,

とにかくまともに機能すること。 
"just working",

そして，インストールの必要もない。
and no installation

私たちはただ使うだけでいいのだ。
-- just using.

しかし，リモートサーバーはまだいくつかの利点をもっている。 
But they have a couple of other advantages as well:

よほど大金を投じないかぎり自分のコンピュータではとてもまともに提供できないような巨大な容量と計算資源が必要なサービスでも，リモートサーバーなら提供することができる。
they can provide services that require massive storage or computational resources that can't reasonably be provided on your own machine, unless you want to spend wads of cash.
 
(ウエッブを検索するために，AltaVista のデータベースを毎日ダウンロードするのはあまり効率のよい話ではないであろう)。 
(Downloading AltaVista's database every day would be a very inefficient way to search the Web.)

巨大な計算能力を必要とする仕事をたくさんのコンピュータに割り振る研究に関心をもってはいるが，現時点でリモートサーバーのもつ圧倒的な利点を越えることはおそらく不可能だと私は思う。
I think these extra advantages are probably impossible to overcome at the moment -- although I'm interested in research on distributing big computational jobs over many machines.


訳注 1 
実際に写真撮影は禁止らしい。
なお，山形浩生さんによると「アメリカの美術館の多くでは写真撮影や模写などは通常は許可されている」とのことです。 
NHP The Georia O'keeffe Museum 

訳注 2 
O'Keefe の絵画は Georgia O'Keefe Flower Gallery にある彼女の花の絵画を見れば分かるように，コンピュータ画面にフラクタルを描いたようにも見える。 

訳注 3 
Squeak については以下のページを参照のこと。 
Squeak Introduction Page! 
