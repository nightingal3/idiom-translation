リーヌス・トーヴァルド interview
Linus Torvalds Interview

数年前にフィンランドの一学生がちょっとしたOSを勉強用に書き始めた時は、それが数百万ユーザを擁する一大ソフト運動になるとはだれも想像だにしていなかった。
When several years ago, a student in Finland started writing an OS kernel for the purpose of his own study, no one even remotely imagined that it would become this huge Software movement that would embrace millions of users world wide. 

Linux（リヌクス、リナックス）と、その著者リーヌス・トーヴァルド。
This was of course the free software Linux, and its author Linus Torvalds.


Although definitely being one of the major figures in the free software movement, 


かれはフリーソフトで世界を改良しようとはしていない。
Linus is not trying to make the world a better place through free software (although he just might).

ストールマンが非常に気にしていた、商業ソフトと独占ソフトの厳密な使い分けも特に気にしていないのは、インタビューを通じて明らかだ。
As you can see in the following interview, he doesn't really care about the clear distinction between "commercial" software and "proprietary" software, something that RMS is really sensitive about.

楽しいから、好きだからソフトをみんなで育てるというフリーソフトの精神は健在だけれど、Linux上の独占ソフトを奨励するという、ストールマンなら顔をしかめるようなこともまったく平気。
He even encourages the development of proprietary software that runs on Linux, something that RMS would probably frown upon.

逆にその野放図な融通無碍さがLinuxの身上でもあり、その人気の一つの要因でもある。
This looseness or openness, however, is a major source of power for Linux and its popularity.

いいものはどんどん取り入れてしまうし、
Don't set any rigid frameworks or direction, let things happen and take in what's good.

なんのかの.言っても、使われなきゃダメだよ、と言って人がそれをどう使おうとまるで気にしない。
He's not impressed with sheer technological trends and fads 
(his resistance to the use of the now-very-trendy microkernel has been really consistent from the beginning of Linux),


This looseness or openness, however, is a major source of power for Linux and its popularity. 
Don't set any rigid frameworks or direction, let things happen and take in what's good. 
He's not impressed with sheer technological trends and fads (his resistance to the use of the now-very-trendy microkernel has been really consistent from the beginning of Linux),  
This freedom (and the availability of various packaged distributions) makes it oodles easier to adopt and use Linux.
It's a different sort of "freedom" than that of RMS, although they have a lot in common.


でも、そのほうがずっと受け入れられやすく、結果としてフリーソフトの裾野を広げているのはおもしろいところ。
However, this pragmatic freedom of Linux have been really essential in expanding the horizon for free software.


How will it develop, what would become of it? 
If you're even remotely interested in the "software and the society" issue, what this "free software" thing can achieve,


今後五年ほどのコンピュータの、そしてフリーソフトの動きの中で、絶対に目を離してはならない運動の中心人物である。
this is one movement (and person) that you'd definitely want to keep an eye on for at least the next five years.

――Linuxの成功で、あなたはフリーソフトの王様の一人になったわけですが、
HY:  You have become one of the champions of free software.

あまりフリーソフトのあるべき姿というような話はしないですよね。
However, unlike Richard Stallman, we don't see you commenting much on what free software should be and what it means to all of us.


Are you interested in these "promote free software" aspects at all, or are you more interested in the software itself?


うん、ぼくはプラグマティストだから。
Linus:  I'm generally a very pragmatic person:

使えるものは使えるってだけなのよ。
that which works, works.

その意味で、フリーソフトのほうがずっといいのは事実。
When it comes to software, I _much_ prefer free software,

使い物になるソフトにはめったにないから、ソースがあって命拾いする場合は多々あるので。
because I have very seldom seen a program that has worked well enough for my needs, and having sources available can be a life-saver. 

だからぼくはフリーソフトの支持者だし、特にGPLの支持者だよ。
So in that sense I am an avid promoter of free software, and GPL'd stuff in particular

だっていったんGPLになったら、その先ずっとフリーだから、先のリリースの心配をしなくていい。
(because once it's GPL'd I _know_ it's going to stay free, so I don't have to worry about future releases). 

でも、商業ソフトに反対ってことではない。
However, that doesn't mean that I'm opposed to commercial software.

Linuxの場合でも、使いやすいパッケージングの問題が解決されて、何もかもずっと手に入れやすくなった。
Commercial software development has some advantages too - the money-making aspects introduces some new incentives that aren't there for most free software.


And those incentives often make for a more p've been very happy indeed with the commercial Linux CR-ROM vendors linux Red Hat. 
What commercialism has brought into Linux has been the incentive to make a good distribution that is easy to use and that has all the packaging issues worked out - essentially everything is easily available.


フリーソフトだと、みんな自分の関心でやってて、使いやすさとかはなかなか考えないよね。
Before the commercial ventures, Linux tended to be rather hard to set up, because most of the developers were motivated mainly by their own interests, which very seldom include issues like ease-of-use.

しかもLinuxの場合だとソースも入手できるから、両方のいいとこどりができる。
And with Linux, commercialism doesn't exclude the availability of sources, so you get the best of both worlds. 

それとソースコードなしの伝統的な商業ソフトに文句をいう気もないよ。
Then there is software that is commercial but doesn't come with sources 
(the "traditional" commercial software as opposed to a Red Hat Linux distribution). 
And I don't try to preach against that either:

バグを自分で直せないのは頭にくるけれど、でもまあそれしかないこともあるし。
I hate the fact that I (and others) can't fix bugs in them, but sometimes that kind of software is the way to go. 


100パーセントLinuxだけに関わってたら、すぐに飽きそうで怖い


――LinuxをGPLにしようとしたのはいつです？　
HY:  When and why did you decide to place Linux under GPL?

シェアウェアにしなかったのを後悔したことは？
Did you ever regret not making it into a shareware?

後悔したことはないなあ。
Linus:  I've never regretted not making Linux shareware:

それにMS-DOSとかで通常行われているような、バイナリだけのシェアウェアって嫌い。
I really don't like the "pay for use" binary shareware programs that are so common in the MS-DOS world. 

商業ソフトの悪いところ（ソースがない）とフリーソフトの悪いところ（仕上げが雑）がそろってるでしょう。
In my opinion, shareware tends to combine the worst of commercial software (no sources) with the worst of free software (no finishing touches).

まったく信用してない。
I simply do not believe in the shareware market at all. 

もともとLinuxはいっさい売買を認めないきつい条件で配布してた。
I actually originally released Linux with complete sources under a non-GPL copyright that was actually much more restrictive than the GPL:


it required that all sources always be available, and it also didn't allow any money to be exchanged for Linux at all
(ie not only did I not try to make money off it myself, but I also forbid anybody else to do so). 


これはお手本にしたMinixが、教育用の限定的なシステムにしては高値で販売されてたことへの反動だった。
That original copyright was mainly a reaction against the operating system I had been trying to use before Linux: "Minix". 
Minix was meant to be a teaching operating system, but it had been to limited and in my opinion too expensive for that.
It was also hard to get hold of.

Linuxは入手しやすくて、ソースもついてきて、だれも高いなんて言えないようにしたかったんだ。
So when I made Linux, I wanted it to be easily available over ftp with full sources, and I did _not_ want it to be too expensive for anybody. 


I changed the copyright to the GPL within roughly half a year:


でも半年くらいして、その条件だときつすぎるのがわかった。
it quickly became evident that my original copyright was so restrictive that it prohibited some entirely valid uses


(disk copying services etc - this was before CD-ROMs became really popular).


それと、最初はGPLに不安もあったけど、でもGNUのCコンパイラを使っていて、それに対する敬意の表明の意味もあった。
And while I was nervous about the GPL at first, I also wanted to show my appreciation to the gcc C compiler that Linux depended on, which was obviously GPL'd.

非常に優れた選択だったと思う。
Making Linux GPL'd was definitely the best thing I ever did.

――あなたはもちろん趣味でLinux開発をしているんですが、
HY:  You obviously work on Linux because you enjoy it (in one way or another). 

それに対してだれかが報酬を支払ったら、状況はちがったでしょうか。
Now, if someone paid you to concentrate on Linux development, do you think things would have been different? 


Does this have anything to do with your choice of the current job?
I understand that many people were surprised that you didn't go to a firm that directly deals with Linux.


仕事をLinux関係にしなかったのは、まさにLinuxに関してやりたくないことをやらされる恐れがないようにと思ってのこと。
Linux:  I actually didn't want to work for a commercial Linux venture exactly because I didn't want to get pressurized into doing something I didn't want to do. 

それと、100パーセントLinuxだけに関わってたら、すぐに飽きそうで怖い。
Also, I actually wanted to have my work not be 100% Linux-oriented anyway, because I was worried that I'd get bored with Linux if that was all I ever did.

だから今の会社は文句なし。
So the work here at Transmeta was pretty much perfect for me:

Linux以外でおもしろい仕事で、しかも暇をみてLinuxの作業もできる、と。
doing something very interesting that is not Linux-related, while at the same time allowing me to work on Linux too,

OSの中身に興味のないユーザの存在は、Linuxの優秀さの証だよ
and with no strings attached when it comes to Linux 


(so my boss can't ask me to do something to Linux that I wouldn't want to do).


――ストールマンのような、フリーソフト以外の独占ソフトは邪悪だ、という考えはどうでしょう。
HY:  What's your views on Richard Stallman's idea of "free ware"?


In your lecture at MIT several years ago, you didn't sound like you were opposed to proprietary software. 
Are you? 
What are better off as freeware, and what are better off as proprietary software?


ぼくはrmsほど白黒はっきりしてるわけじゃない。
Linus:  I'm not as black and white as rms:

みんな好きにすればいいと思うけど、自分ではフリーソフトのほうが好きだ。
I tend to think that people can do whatever they want to, but obviously personally I prefer to use free software. 

それは別に、信念とか信仰の問題ではなくて、いろんな種類のマシンを持っているから（Alphaとインテル）、その全部で作業したい。
And the reason I prefer free software is not actually anything religious or anything like that: it's just that I have a lot of different machines, and I want to be able to work on them all.

ソースがあればどれでも動くようにコンパイルしなおせる。
Having free software means that I can compile it both on my alphas and my PC's.


フリーソフトは、技術的な面で大きな成功をおさめてる。


一方で、商業ソフトのほうがいいのは、仕上げのところ。
On the other hand I tend to think that some things work better as commercial software, mainly because a lot of the program is that "final polish" that commercial software is so good at. 

ユーザインタフェースは、概して商業ソフトのほうがいい。
For example, user interfaces are _usually_ better in commercial software.

それが商業ソフトにとって一番重要な部分だったりする
I'm not saying that this is always true, but in many cases the user interface to a program is the most important part for a commercial company: 
whether the programs works correctly or not seems to be secondary 

（マイクロソフトのプログラムなんて、それ以外はバグだらけじゃん）。
(as shown by the many buggy microsoft programs - not that MS is nearly the only offender). 

だからワープロなんかは商業ソフトのほうがいいことが多い。
So things like Word Processors _tend_ to be better when they are commercial,

それは、ワープロで一番大事なのはインターフェースだからだよね。 
because in a word processor the most important part really is the user interface. 


At the same time free software has been very successful for projects that are technically oriented, and where the most important part is the technical side. 
This obviously includes the Linux kernel, but also things like the GNU C compiler and various programming tools. 


――するとLinuxはインストールが簡単になったのでブラックボックス化してけしからん、フリーソフトの精神に反する、というようなことは……
HY:  We have seen many distributions of Linux that allows users to install Linux without knowing what's under the hood. 
While this has brought in tremendous new users to Linux, there are people who claim that this undermines the spirit of freeware because people are never forced to look under the hood and understand its workings. 
Is this a concern for you?

別に。
Linus:  No,

ありがたいことだと思う。
I think this is only for the best. 

だってみんながOSの中身なんかに興味持つ必要はないもの。
I don't think everybody should be interested in how an operating system works:

ぼくはもちろん興味あるけれど、でも一方で、プログラムってものは役にたたなきゃ始まらないよ。
it happens to be what _I_ am interested in, but I also think that any program is only as good as it is useful.

どんなに実装がよくても、それだけではいいソフトにはならない。
So a useless program cannot be good, regardless of _how_ well it is implemented.

カーネルの中身に興味のないユーザの存在は、Linuxの優秀さの証だし、それにおかげで思いもよらなかった点に気がついたりもするし。 
The fact that there are lots of Linux users who don't care how the kernel works but only want to use it is not only a tribute to how good Linux is, but it also brings up issues that I would never have thought of otherwise.


長期的な見通しやビジョンはあえて持たない。
新しいものが出てきたときに、そのほうが自由に対応できる


Those users tend to do different things from what I do, so their needs are different.
And in many cases those differences have shown something that was missing or badly done in Linux. 
So even though these users aren't interested in how Linux works, they have been instrumental in making it better. 
HY:  About the GNU/Linux argument; have you talked with Richard Stallman about this?
Linus:  rms asked me if I minded the name before starting to use it, and I said "go ahead". 
I didn't think it would explode into the large discussion it resulted in, and I also thought that rms would only use it for the specific release of Linux that the FSF was working on rather than "every" Linux system. 
I never felt that the naming issue was all that important, but I was obviously wrong judging by how many people felt very strongly about it. 
So these days I just tell people to call it just plain "Linux" and nothing more. 


――もう嫌ってくらい聞かれた質問でしょうが、Linuxがここまで成功したのはなぜでしょう。
HY:  (I know you've been asked this question a million times, but...) 
Why did Linux become such a big success?

単にタイミングの問題とか運がよかっただけとか言う人もいますが。
Some people say it's you, some people say it's just a matter of good timing and a lot of luck. 
What's your opinion?

うん、それは絶対ある。
Linus:  There are lots of reasons.
Good timing, lots of luck are certainly two obvious ones.

でも同時に、ぼくとしては自分がよきマネージャ（そしてもちろんよきプログラマ）だったのが大きいと思いたい。
But at the same time I also like to think that I*ve been a good manager (and obviously a good programmer), 

それと、Linux開発モデルが優れていると思う。
and that that fact has also been very instrumental in making Linux a successful product. 

何も縛りがなくて、みんな好き勝手に提案できて、非常に自由だ。
I also think that the Linux development model in general is a very good model: 
Linux tends to have fewer rules than other developments, and anybody can chip in doing whatever they want.

ぼくが最後のフィルタ役を果たす。
I act as a general "filter"  for all the patches, 


but other than that it's a very free development model.


――こんだけ大きくなると、プレッシャーとかないですか？　
HY:  Now that Linux has become so big, do you feel a great pressure about keeping it in "the right course"?

Linuxの将来について心配とかは？　
そろそろ手に負えなくなってきたとか……先の見通しとかどうでしょう。
What is the biggest concern that you have for the future of Linux?

プレッシャーはずっとあったけど、それは主に技術的な面での話で、技術的な問題は必ずよい答えがあるんだ。
Linus:  I*ve always felt pressure about keeping Linux "right", but they have always been technical pressures, and as such I haven't worried too much about them.
The good thing with technical pressures is that technical questions always have a good answer - it's only non-technical questions that sometimes don't have an answer at all. 
So technical concerns tend to eventually find a solution as long as there are good people working on them. 

最高に優秀な連中が作業してるし。
And Linux has the very best. 

だからまったく心配してないし、技術以外の面は、どうでもいいや。
So I*m not really worried about the future of Linux - technically I think Linux is going to only become better and better, and the non-technical side I don't personally worry all that much about. 

もっとデスクトップのアプリが出てくるとうれしいけど、それも数年前に比べたら雲泥だし（まだまだだけど）、心配してないよ。


自分のやりたい部分以外のところはうまく人に任せてこられたし、特に手に負えないとは思わない。


ただ、Linuxプロジェクト全体を考えると、前からぼくなんかがどうこうできるレベルをとっくに超えている。


これはもう勝手に動くでしょう。


長期的な見通しやビジョンはあえて持たないようにしてる。


新しいものが出てきたときに、そのほうが自由に対応できるから。


方針といえば、もっともっとLinuxをよくしようというくらいだね。


そんなものを考えてる間に、次から次へと新しいことが起きてる状態。


マイクロソフトの脅威になるつもりはない。


Windowsはぜんぜん目標がちがうから



HY:  There are always various advocacy debates about which is better/best,
Linux or FreeBSD or NetBSD. What's your stance? It's often argued that
Linux isn't inherently better than any other OS. Do you feel the same way?
Have you looked at HURD, the new kernel from the GNU project? What do you
think about it?

Linus:  I don't think Linux is _inherently_ better than FreeBSD or NetBSD.
I just think that Linux is much more successful, partly because of better
management, in my opinion. And because Linux has been more successful,
there have been more people working on it, and it has developed a lot faster. 
  There are also a few technical advantages going for Linux: it's a clean
re-implementation that doesn't have any historical baggage, and the fact
that there is one person who everybody agrees is in charge (me) allows me
to do more radical decisions than most other projects can allow.
  For example, I can single-handedly decide that something is badly done,
and re-do it completely even if it breaks lots of old code. It takes a
while to recover from those kinds of decisions, but it makes for a better
end result: if something is broken it gets fixed faster. 
  As to Hurd, I have to say that I'm not very convinced about the approach.
I personally tend to think that Mach, the microkernel the Hurd is based on,
is not only bloated and slow, but also much too complex. 
  I think the Hurd tried to be the "perfect" operating system, and they
chewed off more than they could handle. It tries to be too clever, too
different, too radical. It doesn't try to be _practical_, which is the main
goal with Linux. 


――ほかのPC-UNIXと比較したりします？　
NetBSDなんかに比べてどこが長所でしょう。
HY:  Do you think of these other PC-Unix systems as rivals, or more of a colleague?
Do you often look at them to see what can be incorporated into Linux, or do they never bother you at all?

それと、今度出たHurdとかどうですか？


Linuxの長所といえば、マネジメントがいいということかな。


協力者が多くて、開発が速い。


それと、過去の遺産をひきずってなくて、しかもぼくが方針を一人で決められるので、ほかのプロジェクトより大胆な方向転換ができる。


短期的にそれで混乱が生じても、長期的にはいい結果になりやすい。


でもほかのPC-UNIXはあまり参照しない。


どうせなら、Plan 9とかInfernoみたいなもっと新しいアイデアに基づくOSを見ることのほうが多いね。 


Hurdはねえ。


あの方針にはあまり感心しない。


複雑すぎるし、「完璧」になろうとしていささかやりすぎてる感じ。


Linuxはむしろ、現実的であろうとしている。 


HY:  Do you think of these other PC-Unix systems as rivals, or more of a
colleague? Do you often look at them to see what can be incorporated into
Linux, or do they never bother you at all?

Linus:  I very seldom worry about other systems. I concentrate pretty fully
on just making Linux the best OS I can, and while that sometimes involves
getting ideas from other systems, that is not actually a very large part
(and when I want to get new and interesting ideas I usually turn to more
radical systems like Plan-9 or Inferno, and then I try to decide which of
those ideas are really worth it).



――自分がマイクロソフトに対する脅威だと思いますか？　
HY:  Do you consider yourself (or Linux) as a threat to Microsoft?

LinuxはWindowsの競合相手なのか、それとも住み分けるのか……
Do you try to be one? 
Or do you see Linux as occupying a separate niche from Windows?

マイクロソフトの脅威になるつもりはないし、競合とも思ってないなあ。
Linus:  I don't try to be a threat to MicroSoft, mainly because I don't really see MS as competition.

特にWindowsはぜんぜん目標がちがうから。
Especially not Windows - the goals of Linux and Windows are simply so different. 

前はNTに関心があったけれど、技術的に見るべきものはないね。
I used to be interested in Windows NT, but the more I see of it the more it looks like traditional Windows with a stabler kernel. 
I don't find anything technically interesting there.

かれらはOSづくりより金儲けのほうがうまいってことじゃない？
In my opinion MS is a lot better at making money than it is at making good operating systems. 

フィンランドはハイテク国家。


人口一人あたりのインターネットアクセスは世界一。


その意味で、Linux開発には好適だった


――Linuxは世界中の有志の共同作業ですよね。


純粋にあなたのコードってどのくらい残ってるんでしょう。


今だと、コーディネートと自分でコードを書くのとどっちが主でしょう。


コーディネート。


たまに２週間くらいひたすらコードを書く時もあるけど、全体的にはとりまとめ。


純粋にぼくだけのコードってのはほとんどないけれど、でも主な設計はぼくだしメンテナンスもぼくがして、「自分の！」という部分はある。


メモリ管理とかプロセス処理とかホントに基本的な部分だね。 


――フィンランドというのは、Linux開発になんか影響は？　


ヘルシンキは寒すぎてほかにすることがないんだろうという説が……


いや、ヘルシンキはそんなひどいとこじゃないって。


寒いのは冬だけ。


いい街だよ。


なにがいいって、教育水準が高くて、しかもほとんど無料ってこと。


だから経済的な心配なしに大学に行けたんだ。


それと、フィンランドはハイテク国家だから。


人口一人あたりインターネットアクセスで見たら世界一のはず。


その意味で、Linux開発には好適だったと思うな。


――とりあえずアメリカはいかが？


天気が最高。


フィンランドも悪くなかったけど、ここのほうがずっといい。


ここへきて気がついたんだけれど、フィンランドの企業は非常に伝統的であまりリスクをとらない。


シリコンバレーは全然違う。


みんな最先端で暮らしていて、おもしろいプロジェクトも山ほどある。 


パトリシア（リーヌスの長女）はほんとに手のかからない子で、すごくおもしろい断じてLinuxへの脅威なんかではないよ


――こないだWIREDの記事で、「Linuxの真の敵はこんど生まれたかれの娘だ！　これでLinusはもうLinuxに割く暇がなくなる！」とゆーよーなことが書いてありましたが


……マジじゃあないですよねえ？


いやいや、ありゃ冗談よ、まったくの。


あのインタビューを受けたのは、子供が産まれて二日目だったから、この先どうなるか見当もつかなかったし。


ふたを開けてみたら、パトリシアはほんとに手のかからない子で、すごくおもしろいや。


そして断じてLinuxへの脅威なんかではないよ。

         

以上の文書(「リーヌス・トーヴァルズ インタヴュー」)は、フリー・ソフトウェアです。
あなたは、Free Software Foundation が公表したGNU 一般公有使用許諾の「バージョン２」或いはそれ以降の各バージョンの中からいずれかを選択し、そのバージョンが定める条項に従って「リーヌス・トーヴァルズ インタヴュー」を再頒布または変更することができます。
当文書は有用とは思いますが、頒布にあたっては、市場性及び特定目的適合性についての暗黙の保証を含めて、いかなる保証も行ないません。
詳細についてはGNU 一般公有使用許諾書をお読みください。
Copyright (C) 1997年 山形浩生 
