Linux と GNU - GNU プロジェクト 
Linux and GNU - GNU Project


多くのコンピュータユーザは、それとは気づかぬまま毎日 GNU システム (18k キャラクタ) の変更されたバージョンを使っていますが、
Many computer users run a modified version of the GNU system (18k characters)  every day, without realizing it.

ひょんなことから今日広く使われている GNU のあるバージョンは「Linux」としてより広く知られています。
Through a peculiar turn of events, the version of GNU which is widely used today is more often known as ``Linux'',

そして、多くのユーザは GNU プロジェクト がどれほど深く Linux とつながっているか気づいていません。 
and many users are not aware of the extent of its connection with the GNU Project. 

たしかに、Linux というものは存在します。
There really is a Linux, 


and these people are using it, but it is not the operating system.


それはカーネルであり、人びとはそれを使っているのです。
Linux is the kernel:


the program in the system that allocates the machine's resources to the other programs that you run.


しかし、カーネルをそのものだけで使うわけにはいきません。
The kernel is an essential part of an operating system, but useless by itself; 

カーネルはオペレーティングシステム全体の一部として初めて使えるようになります。
it can only function in the context of a complete operating system. 

Linux は通常 GNU オペレーティングシステムと組み合わせて使われます。
Linux is normally used in a combination with the GNU operating system:

システム自体は基本的には GNU で、カーネルとして Linux が機能しているのです。 
the whole system is basically GNU, with Linux functioning as its kernel. 

多くのユーザは、カーネルとしての Linux と、彼らがこちらもまた「Linux」と呼んでいるところのシステム全体との区別がよく分かっていないのです。
Many users are not fully aware of the distinction between the kernel, which is Linux, and the whole system, which they also call ``Linux''.

名称のあいまいな使い方は理解を促進しません。 
The ambiguous use of the name doesn't promote understanding. 


These users often think that Linus Torvalds developed the whole operating system in 1991, with a bit of help. 


ふつう、プログラマたちは Linux はカーネルの一つであると分かっているのですが、
Programmers generally know that Linux is a kernel.

彼らはシステム全体もまた「Linux」と呼ばれていることをよく聞いているので、その名称にふさわしい歴史を思い浮かべてしまうことが多いのです。
But since they have generally heard the whole system called ``Linux'' as well, they often envisage a history that would justify naming the whole system after the kernel.

例えば彼らの多くは、 Linus Torvalds がカーネルを書き上げたのち、彼の友人たちが他のフリーソフトウェアを探し回ってみたところ、どういうわけか Unix ライクなシステムを作るのに必要なものはすでにほぼすべて揃っていた、というようなことを信じています。
For example, many believe that once Linus Torvalds finished writing Linux, the kernel, its users looked around for other free software to go with it, and found that (for no particular reason) most everything necessary to make a Unix-like system was already available. 
 
彼らが見つけたのは偶然の産物ではありません。
What they found was no accident

それは GNU システムだったのです。
--it was the GNU system.

当時完全なシステムを構成するのに十分なだけの フリーソフトウェア が入手可能だったのは、 GNU プロジェクトが 1984 年以来そうした完全なシステムを作るべく作業してきたからでした。 
The available free software added up to a complete system because the GNU Project had been working since 1984 to make one.

GNU 宣言(31k キャラクタ) によって GNU と呼ばれるフリーの Unix ライクなシステムを開発するという目標が打ち出されました。
The GNU Manifesto (31k characters) had set forth the goal of developing a free Unix-like system, called GNU.

また、GNU プロジェクトの 当初の声明に於いて、 GNU システムの原案の一部が概説されています。 
The Initial Announcement of the GNU Project also outlines some of the original plans for the GNU system. 

Linux が書かれるまでに、システムはほとんど完成していたのです。 
By the time Linux was written, the system was almost finished. 

多くのフリーソフトウェアプロジェクトでは、ある特定の目的を持ったある特定のプログラムを開発するというのが目標になっています。
Most free software projects have the goal of developing a particular program for a particular job.

例えば、Linus Torvalds は Unix ライクなカーネル(Linux)を書くことを目指していましたし、
For example, Linus Torvalds set out to write a Unix-like kernel (Linux);

Donald Knuth はテキストフォーマッタ(TeX)を書くことを目標にしていました。
Donald Knuth set out to write a text formatter (TeX);

Bob Scheifler はウィンドウシステム( X Windows) の開発に取り組みました。
Bob Scheifler set out to develop a window system (the X Window system).

これらのプロジェクトからある特定のプログラムがもたらされたということで、この種のプロジェクトが社会にどれだけ貢献したかというのを測るというのはごく自然なことです。
It's natural to measure the contribution of this kind of project by specific programs that came from the project. 

しかしもし私たちがこのようなやり方で GNU プロジェクトの貢献を測ろうとすると、どういう結論に至るでしょう? 
If we tried to measure the GNU Project's contribution in this way, what would we conclude?

ある CD-ROM 販売業者によると、彼らの「Linux ディストリビューション」中ではGNU ソフトウェア が全ソースコードの約 28 % という、単一のグループとしては最大の割合を占めており、またその中には、それ無しではシステムが成立しない本質的かつ重要なコンポーネントが含まれています。
One CD-ROM vendor found that in their ``Linux distribution'', GNU software was the largest single contingent, around 28% of the total source code, and this included some of the essential major components without which there could be no system.

Linux 自体は大体 3 % を占めていました。
Linux itself was about 3%.

ですから、誰がそのシステム内のプログラムを書いたかという判断基準でそのシステムの名前を一つ選ぶということであれば、もっともふさわしい選択は「GNU」ということになるでしょう。
So if you were going to pick a name for the system based on who wrote the programs in the system, the most appropriate single choice would be ``GNU''. 

しかし、私たちはこの問題をそのように考えるのが正しいとは思いません。 
But we don't think that is the right way to consider the question.

GNU プロジェクトはなにか特定のソフトウェアパッケージを開発するプロジェクトではありませんでしたし、今もそうではありません。 
The GNU Project was not, is not, a project to develop specific software packages.

GNU プロジェクトは、C コンパイラ を開発しましたが、GNU は C コンパイラを開発するプロジェクトではありませんでした。
It was not a project to develop a C compiler, although we did.

同様に、私たちはテキストエディタを開発しましたが、 GNU はテキストエディタを開発するプロジェクトではなかったのです。 
It was not a project to develop a text editor, although we developed one.

GNU プロジェクトの目標は、完全なフリーの Unix ライクなシステム を開発することです。 
The GNU Project's aim was to develop a complete free Unix-like system: GNU. 

多くの人々がシステムに含まれるフリーソフトウェアに多大な貢献をしてきましたし、それらはみな称賛に値します。
Many people have made major contributions to the free software in the system, and they all deserve credit.

しかしそれが単なる有用なプログラムの寄せ集めではなく、システムであるのは、GNU プロジェクトがそれをシステムとしてまとめ上げたからです。
But the reason it is an integrated system--and not just a collection of useful programs--is because the GNU Project set out to make it one.

私たちはフリーの完全なシステムを構成するのに必要なプログラムのリストを作り、そのリストに載っているものすべてを組織的に探し、書き、あるいは書いてくれる人を探しました。
We made a list of the programs needed to make a complete free system, and we systematically found, wrote, or found people to write everything on the list.

私たちは、アセンブラやリンカといった、不可欠だけれどもあまりエキサイティングであるとは言えない重要なコンポーネントを書きました。
We wrote essential but unexciting (1) components 

それら無しではシステムを用意することができないからです。
because you can't have a system without them.


Some of our system components, the programming tools, became popular on their own among programmers, but we wrote many components that are not tools (2).
We even developed a chess game, GNU Chess, because a complete system needs good games too. 


また、完全なシステムには単なるプログラミングツール以上のものが必要となります。
Bourne Again シェル、PostScript インタプリタである Ghostscript、そしてGNU C ライブラリなども同様に重要なのです。 


90 年代初頭までに、私たちはカーネルを除いたシステム全体を組み立てていました
By the early 90s we had put together the whole system aside from the kernel

(また、私たちは Mach の上で動く GNU Hurd というカーネルを開発していました)。
(and we were also working on a kernel, the GNU Hurd, which runs on top of Mach). 

このカーネルの開発の困難さは予想をはるかに超えるもので、
Developing this kernel has been a lot harder than we expected; 


the GNU Hurd started working reliably in 2001. 


私たちは依然 完成に向け開発中 です。 
We're now starting to prepare the actual release of the GNU system, with the GNU Hurd. 

幸運なことに、あなたは Hurd の完成を待つ必要はありません。
Fortunately, you didn't have to wait for the Hurd, 

なぜなら、Linux が現在動いているからです。
because Linux was available. 

Linus Torvalds が Linux を書いたとき、彼は最後の大きな欠落を埋めました。
When Linus Torvalds wrote Linux, he filled the last major gap.

そして人びとは、Linux を GNU システムと一緒にすることで完全なフリーのシステムを手に入れることができたのです。
People could then put Linux together with the GNU system to make a complete free system:

それこそが、Linux をベースとした GNU システム(短くは GNU/Linux システム) にほかなりません。 
a Linux-based version of the GNU system; the GNU/Linux system, for short. 

一緒にするというと簡単なことのように聞こえますが、それはなみたいていの仕事ではありません。 
Putting them together sounds simple, but it was not a trivial job.

GNU C ライブラリ(短く glibc と呼ばれます)には相当な変更が必要となりました。
Some GNU components(3) needed substantial change to work with Linux.

完全なシステムをディストリビューションとして「インストールすればすぐ使える」というレベルにまでするのも大変な作業でした。
Integrating a complete system as a distribution that would work ``out of the box'' was a big job, too.

どうシステムをインストールし、起動するかという問題を解決しなければならなかったからです。 
It required addressing the issue of how to install and boot the system

Linux が登場する前は、まだそういう段階には到達していなかったので、私たちはそれまでその種の問題に取り組んだことがありませんでした。
--a problem we had not tackled, because we hadn't yet reached that point. 

この件に関しては様々なシステムディストリビューションを開発した人々が重要な貢献をしてくれました。 
The people who developed the various system distributions made a substantial contribution. 

GNU の他に、Unix ライクなオペレーティングシステムを独立に作り上げてきたプロジェクトがもう一つあります。
Addendum: Aside from GNU, one other project has independently produced a free Unix-like operating system.

このシステムは BSDとして知られており、カリフォルニア大学バークリー校に於いて開発されました。 
This system is known as BSD, and it was developed at UC Berkeley.

GNU プロジェクトにならって BSD の開発者たちは彼らの作品をフリーソフトウェアとし、またしばしば GNU の活動家によって励まされてきましたが、彼らの実際の成果は GNU とほとんど重複するところがありません。
The BSD developers were inspired to make their code free software by the example of the GNU Project, and explicit appeals from GNU activists helped persuade them, but the code had little overlap with GNU.

GNU システムとその変種が BSD ソフトウェアのいくつかを使っているのと同様、今日の BSD システムも GNU ソフトウェアの一部を使っています。
BSD systems today use some GNU programs, just as the GNU system and its variants use some BSD programs; 

しかし、全体から見れば、この二つは別々に進化してきた異なったシステムです。
however, taken as wholes, they are two different systems that evolved separately.


The BSD developers did not write a kernel and add it to the GNU system, and a name like GNU/BSD would not fit the situation. 


今日存在するフリーなオペレーティングシステムは GNU システムの変種か、BSD システムの一種と考えてまず間違いありません。
A free operating system that exists today is almost certainly either a variant of the GNU system, or a kind of BSD system. 
 
GNU プロジェクトは、GNU システムそれ自体 同様 GNU/Linux システム もサポートしており、資金的な援助すらしています。
The GNU Project supports GNU/Linux systems as well as the GNU system--even with funds. 

私たちは GNU C ライブラリに対する Linux 関係の拡張の書き直しを資金援助しました。
We funded the rewriting of the Linux-related extensions to the GNU C library, 

結果として現在それらはうまく統合され、最新の GNU/Linux システムは現在のライブラリをなんら変更することなく使用しています。
so that now they are well integrated, and the newest GNU/Linux systems use the current library release with no changes. 

私たちはまた Debian GNU/Linuxに対して、その開発の初期において資金を提供しました。 
We also funded an early stage of the development of Debian GNU/Linux. 

私たちは今日作業の大半に Linux をベースとする GNU システムを使っており、またみなさんもそうして下さることを望んでいます。
We use Linux-based GNU systems today for most of our work, and we hope you use them too. 

しかし、どうか「Linux」という名称をあいまいに使うことで一般大衆を混乱させないでください。 
But please don't confuse the public by using the name ``Linux'' ambiguously. 

Linux はカーネルであり、システムに不可欠の重要な一部分ですが、
Linux is the kernel, one of the essential major components of the system. 

全体としてのシステムは多かれ少なかれ GNU システムなのです。
The system as a whole is more or less the GNU system, with Linux added.  

GNU のホームページに戻る。 
Return to GNU's home page. 

FSF または GNU へのお問い合わせやご質問は gnu@gnu.orgにお送りください。. 
Please send FSF & GNU inquiries & questions to gnu@gnu.org.

FSF と連絡を取るには他の手段もあります。 
There are also other ways to contact the FSF. 

これらのウェブページに対するご意見は webmasters@www.gnu.org までお送りください。
Please send comments on these web pages to webmasters@www.gnu.org, 

その他のご質問は gnu@gnu.org までお願いします。 
send other questions to gnu@gnu.org. 

Copyright 1997, 1998 Richard Stallman 
Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002 Richard M. Stallman 

本文に一切の変更を加えず、この著作権表示を残す限り、この文章全体のいかなる媒体における複製および配布も許可する。 
Verbatim copying and distribution of this entire article is permitted in any medium, provided this notice is preserved. 

Toshiki Minakuchi 氏の訳を元に、八田真行 <mhatta@gnu.org> が修正を加えました。 
Updated: 10 Dec 2000 mhatta 
